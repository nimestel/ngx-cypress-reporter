{
  "stats": {
    "suites": 20,
    "tests": 120,
    "passes": 119,
    "pending": 0,
    "failures": 1,
    "start": "2020-09-03T16:01:21.584Z",
    "end": "2020-09-03T16:01:21.584Z",
    "duration": 75246,
    "testsRegistered": 120,
    "passPercent": 99.16666666666667,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "4cabfb4d-1747-4e56-bf97-25ce125ba115",
      "title": "",
      "fullFile": "cypress/integration/examples/aliasing.spec.js",
      "file": "cypress/integration/examples/aliasing.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6e567287-30a0-4e36-a5e3-388aadf69c05",
          "title": "Aliasing",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".as() - alias a DOM element for later use",
              "fullTitle": "Aliasing .as() - alias a DOM element for later use",
              "timedOut": null,
              "duration": 644,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/as\n// Alias a DOM element for use later\n// We don't have to traverse to the element\n// later in our code, we reference it with @\ncy.get('.as-table').find('tbody>tr')\n    .first().find('td').first()\n    .find('button').as('firstBtn');\n// when we reference the alias, we place an\n// @ in front of its name\ncy.get('@firstBtn').click();\ncy.get('@firstBtn')\n    .should('have.class', 'btn-success')\n    .and('contain', 'Changed');",
              "err": {},
              "uuid": "d5aa286b-2521-469c-bc9f-e006f5c1c3ac",
              "parentUUID": "6e567287-30a0-4e36-a5e3-388aadf69c05",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".as() - alias a route for later use",
              "fullTitle": "Aliasing .as() - alias a route for later use",
              "timedOut": null,
              "duration": 964,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Alias the route to wait for its response\ncy.server();\ncy.route('GET', 'comments/*').as('getComment');\n// we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get('.network-btn').click();\n// https://on.cypress.io/wait\ncy.wait('@getComment').its('status').should('eq', 200);",
              "err": {},
              "uuid": "54c7c337-b311-4191-8d7a-719e421f7125",
              "parentUUID": "6e567287-30a0-4e36-a5e3-388aadf69c05",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d5aa286b-2521-469c-bc9f-e006f5c1c3ac",
            "54c7c337-b311-4191-8d7a-719e421f7125"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1608,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "9c85d23b-bd06-45f6-bb6e-0ac4ae865b7b",
      "title": "",
      "fullFile": "cypress/integration/examples/assertions.spec.js",
      "file": "cypress/integration/examples/assertions.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f3e683fd-fdc6-4326-b79d-eb24e1e0795d",
          "title": "Assertions",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "20bff360-61be-4379-ad2d-66b0093e4650",
              "title": "Implicit Assertions",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": ".should() - make an assertion about the current subject",
                  "fullTitle": "Assertions Implicit Assertions .should() - make an assertion about the current subject",
                  "timedOut": null,
                  "duration": 550,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/should\ncy.get('.assertion-table')\n    .find('tbody tr:last')\n    .should('have.class', 'success')\n    .find('td')\n    .first()\n    // checking the text of the <td> element in various ways\n    .should('have.text', 'Column content')\n    .should('contain', 'Column content')\n    .should('have.html', 'Column content')\n    // chai-jquery uses \"is()\" to check if element matches selector\n    .should('match', 'td')\n    // to match text content against a regular expression\n    // first need to invoke jQuery method text()\n    // and then match using regular expression\n    .invoke('text')\n    .should('match', /column content/i);\n// a better way to check element's text content against a regular expression\n// is to use \"cy.contains\"\n// https://on.cypress.io/contains\ncy.get('.assertion-table')\n    .find('tbody tr:last')\n    // finds first <td> element with text content matching regular expression\n    .contains('td', /column content/i)\n    .should('be.visible');\n// for more information about asserting element's text\n// see https://on.cypress.io/using-cypress-faq#How-do-I-get-an-elementâ€™s-text-contents",
                  "err": {},
                  "uuid": "2db4e7c0-e01b-474e-b0f9-6dc0690e4ebe",
                  "parentUUID": "20bff360-61be-4379-ad2d-66b0093e4650",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": ".and() - chain multiple assertions together",
                  "fullTitle": "Assertions Implicit Assertions .and() - chain multiple assertions together",
                  "timedOut": null,
                  "duration": 222,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/and\ncy.get('.assertions-link')\n    .should('have.class', 'active')\n    .and('have.attr', 'href')\n    .and('include', 'cypress.io');",
                  "err": {},
                  "uuid": "5d99ede1-f69d-46ae-98a7-3c05cf35859d",
                  "parentUUID": "20bff360-61be-4379-ad2d-66b0093e4650",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2db4e7c0-e01b-474e-b0f9-6dc0690e4ebe",
                "5d99ede1-f69d-46ae-98a7-3c05cf35859d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 772,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "be98cca2-21b5-4375-b222-d5cec6fbc758",
              "title": "Explicit Assertions",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "expect - make an assertion about a specified subject",
                  "fullTitle": "Assertions Explicit Assertions expect - make an assertion about a specified subject",
                  "timedOut": null,
                  "duration": 173,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// We can use Chai's BDD style assertions\nexpect(true).to.be[\"true\"];\nvar o = { foo: 'bar' };\nexpect(o).to.equal(o);\nexpect(o).to.deep.equal({ foo: 'bar' });\n// matching text using regular expression\nexpect('FooBar').to.match(/bar$/i);",
                  "err": {},
                  "uuid": "4eb1efef-298b-4f3e-9170-e9bc54065638",
                  "parentUUID": "be98cca2-21b5-4375-b222-d5cec6fbc758",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "pass your own callback function to should()",
                  "fullTitle": "Assertions Explicit Assertions pass your own callback function to should()",
                  "timedOut": null,
                  "duration": 197,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Pass a function to should that can have any number\n// of explicit assertions within it.\n// The \".should(cb)\" function will be retried\n// automatically until it passes all your explicit assertions or times out.\ncy.get('.assertions-p')\n    .find('p')\n    .should(function ($p) {\n    // https://on.cypress.io/$\n    // return an array of texts from all of the p's\n    // @ts-ignore TS6133 unused variable\n    var texts = $p.map(function (i, el) { return Cypress.$(el).text(); });\n    // jquery map returns jquery object\n    // and .get() convert this to simple array\n    var paragraphs = texts.get();\n    // array should have length of 3\n    expect(paragraphs, 'has 3 paragraphs').to.have.length(3);\n    // use second argument to expect(...) to provide clear\n    // message with each assertion\n    expect(paragraphs, 'has expected text in each paragraph').to.deep.eq([\n        'Some text from first p',\n        'More text from second p',\n        'And even more text from third p',\n    ]);\n});",
                  "err": {},
                  "uuid": "aa8c4e92-d3f5-4797-8a75-8ae5ea9ee80b",
                  "parentUUID": "be98cca2-21b5-4375-b222-d5cec6fbc758",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "finds element by class name regex",
                  "fullTitle": "Assertions Explicit Assertions finds element by class name regex",
                  "timedOut": null,
                  "duration": 164,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('.docs-header')\n    .find('div')\n    // .should(cb) callback function will be retried\n    .should(function ($div) {\n    expect($div).to.have.length(1);\n    var className = $div[0].className;\n    expect(className).to.match(/heading-/);\n})\n    // .then(cb) callback is not retried,\n    // it either passes or fails\n    .then(function ($div) {\n    expect($div, 'text content').to.have.text('Introduction');\n});",
                  "err": {},
                  "uuid": "b8e82c03-5fc7-4a05-9a09-4d0de9dbd622",
                  "parentUUID": "be98cca2-21b5-4375-b222-d5cec6fbc758",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "can throw any error",
                  "fullTitle": "Assertions Explicit Assertions can throw any error",
                  "timedOut": null,
                  "duration": 182,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('.docs-header')\n    .find('div')\n    .should(function ($div) {\n    if ($div.length !== 1) {\n        // you can throw your own errors\n        throw new Error('Did not find 1 element');\n    }\n    var className = $div[0].className;\n    if (!className.match(/heading-/)) {\n        throw new Error(\"Could not find class \\\"heading-\\\" in \" + className);\n    }\n});",
                  "err": {},
                  "uuid": "bb4cc5e8-2bab-489f-be54-c1874f444561",
                  "parentUUID": "be98cca2-21b5-4375-b222-d5cec6fbc758",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "matches unknown text between two elements",
                  "fullTitle": "Assertions Explicit Assertions matches unknown text between two elements",
                  "timedOut": null,
                  "duration": 201,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "/**\n * Text from the first element.\n * @type {string}\n*/\nvar text;\n/**\n * Normalizes passed text,\n * useful before comparing text with spaces and different capitalization.\n * @param {string} s Text to normalize\n*/\nvar normalizeText = function (s) { return s.replace(/\\s/g, '').toLowerCase(); };\ncy.get('.two-elements')\n    .find('.first')\n    .then(function ($first) {\n    // save text from the first element\n    text = normalizeText($first.text());\n});\ncy.get('.two-elements')\n    .find('.second')\n    .should(function ($div) {\n    // we can massage text before comparing\n    var secondText = normalizeText($div.text());\n    expect(secondText, 'second text').to.equal(text);\n});",
                  "err": {},
                  "uuid": "2f49c55c-882a-40b1-b2d6-2bcca7c4ba64",
                  "parentUUID": "be98cca2-21b5-4375-b222-d5cec6fbc758",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "assert - assert shape of an object",
                  "fullTitle": "Assertions Explicit Assertions assert - assert shape of an object",
                  "timedOut": null,
                  "duration": 195,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var person = {\n    name: 'Joe',\n    age: 20\n};\nassert.isObject(person, 'value is object');",
                  "err": {},
                  "uuid": "5f2d01dd-499a-49e5-b2a0-56bb6bfb2785",
                  "parentUUID": "be98cca2-21b5-4375-b222-d5cec6fbc758",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "retries the should callback until assertions pass",
                  "fullTitle": "Assertions Explicit Assertions retries the should callback until assertions pass",
                  "timedOut": null,
                  "duration": 1640,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('#random-number')\n    .should(function ($div) {\n    var n = parseFloat($div.text());\n    expect(n).to.be.gte(1).and.be.lte(10);\n});",
                  "err": {},
                  "uuid": "ceaa4998-b817-4a03-8363-9aea9f6a6f85",
                  "parentUUID": "be98cca2-21b5-4375-b222-d5cec6fbc758",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4eb1efef-298b-4f3e-9170-e9bc54065638",
                "aa8c4e92-d3f5-4797-8a75-8ae5ea9ee80b",
                "b8e82c03-5fc7-4a05-9a09-4d0de9dbd622",
                "bb4cc5e8-2bab-489f-be54-c1874f444561",
                "2f49c55c-882a-40b1-b2d6-2bcca7c4ba64",
                "5f2d01dd-499a-49e5-b2a0-56bb6bfb2785",
                "ceaa4998-b817-4a03-8363-9aea9f6a6f85"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2752,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "537bb76b-f6fa-4ced-bc18-ea41575c5081",
      "title": "",
      "fullFile": "cypress/integration/examples/connectors.spec.js",
      "file": "cypress/integration/examples/connectors.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "cebab16c-6d70-4621-a112-37b491fa1ed5",
          "title": "Connectors",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".each() - iterate over an array of elements",
              "fullTitle": "Connectors .each() - iterate over an array of elements",
              "timedOut": null,
              "duration": 515,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/each\ncy.get('.connectors-each-ul>li')\n    .each(function ($el, index, $list) {\n    console.log($el, index, $list);\n});",
              "err": {},
              "uuid": "69bd0080-61d1-42e0-93e6-863393ce673b",
              "parentUUID": "cebab16c-6d70-4621-a112-37b491fa1ed5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".its() - get properties on the current subject",
              "fullTitle": "Connectors .its() - get properties on the current subject",
              "timedOut": null,
              "duration": 191,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/its\ncy.get('.connectors-its-ul>li')\n    // calls the 'length' property yielding that value\n    .its('length')\n    .should('be.gt', 2);",
              "err": {},
              "uuid": "47b55c07-44e4-464e-b7d6-ef179de46057",
              "parentUUID": "cebab16c-6d70-4621-a112-37b491fa1ed5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".invoke() - invoke a function on the current subject",
              "fullTitle": "Connectors .invoke() - invoke a function on the current subject",
              "timedOut": null,
              "duration": 163,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// our div is hidden in our script.js\n// $('.connectors-div').hide()\n// https://on.cypress.io/invoke\ncy.get('.connectors-div').should('be.hidden')\n    // call the jquery method 'show' on the 'div.container'\n    .invoke('show')\n    .should('be.visible');",
              "err": {},
              "uuid": "5e683a0f-881c-449a-a748-b11d06719376",
              "parentUUID": "cebab16c-6d70-4621-a112-37b491fa1ed5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".spread() - spread an array as individual args to callback function",
              "fullTitle": "Connectors .spread() - spread an array as individual args to callback function",
              "timedOut": null,
              "duration": 177,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/spread\nvar arr = ['foo', 'bar', 'baz'];\ncy.wrap(arr).spread(function (foo, bar, baz) {\n    expect(foo).to.eq('foo');\n    expect(bar).to.eq('bar');\n    expect(baz).to.eq('baz');\n});",
              "err": {},
              "uuid": "589dd489-8206-4bb0-a499-e273bb50d239",
              "parentUUID": "cebab16c-6d70-4621-a112-37b491fa1ed5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "c0b24671-7d2f-475d-b148-0dfeab45dd58",
              "title": ".then()",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "invokes a callback function with the current subject",
                  "fullTitle": "Connectors .then() invokes a callback function with the current subject",
                  "timedOut": null,
                  "duration": 181,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/then\ncy.get('.connectors-list > li')\n    .then(function ($lis) {\n    expect($lis, '3 items').to.have.length(3);\n    expect($lis.eq(0), 'first item').to.contain('Walk the dog');\n    expect($lis.eq(1), 'second item').to.contain('Feed the cat');\n    expect($lis.eq(2), 'third item').to.contain('Write JavaScript');\n});",
                  "err": {},
                  "uuid": "b8bf6f30-2139-4960-94c1-0f5ab5344f52",
                  "parentUUID": "c0b24671-7d2f-475d-b148-0dfeab45dd58",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "yields the returned value to the next command",
                  "fullTitle": "Connectors .then() yields the returned value to the next command",
                  "timedOut": null,
                  "duration": 180,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wrap(1)\n    .then(function (num) {\n    expect(num).to.equal(1);\n    return 2;\n})\n    .then(function (num) {\n    expect(num).to.equal(2);\n});",
                  "err": {},
                  "uuid": "f434df60-133f-4cd9-a1b2-3642bd381585",
                  "parentUUID": "c0b24671-7d2f-475d-b148-0dfeab45dd58",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "yields the original subject without return",
                  "fullTitle": "Connectors .then() yields the original subject without return",
                  "timedOut": null,
                  "duration": 190,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wrap(1)\n    .then(function (num) {\n    expect(num).to.equal(1);\n    // note that nothing is returned from this callback\n})\n    .then(function (num) {\n    // this callback receives the original unchanged value 1\n    expect(num).to.equal(1);\n});",
                  "err": {},
                  "uuid": "3fa74847-f4d8-4d10-80c4-65185f158d06",
                  "parentUUID": "c0b24671-7d2f-475d-b148-0dfeab45dd58",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "yields the value yielded by the last Cypress command inside",
                  "fullTitle": "Connectors .then() yields the value yielded by the last Cypress command inside",
                  "timedOut": null,
                  "duration": 185,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wrap(1)\n    .then(function (num) {\n    expect(num).to.equal(1);\n    // note how we run a Cypress command\n    // the result yielded by this Cypress command\n    // will be passed to the second \".then\"\n    cy.wrap(2);\n})\n    .then(function (num) {\n    // this callback receives the value yielded by \"cy.wrap(2)\"\n    expect(num).to.equal(2);\n});",
                  "err": {},
                  "uuid": "7641a21d-c1a0-4e51-8786-71046506ad92",
                  "parentUUID": "c0b24671-7d2f-475d-b148-0dfeab45dd58",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b8bf6f30-2139-4960-94c1-0f5ab5344f52",
                "f434df60-133f-4cd9-a1b2-3642bd381585",
                "3fa74847-f4d8-4d10-80c4-65185f158d06",
                "7641a21d-c1a0-4e51-8786-71046506ad92"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 736,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "69bd0080-61d1-42e0-93e6-863393ce673b",
            "47b55c07-44e4-464e-b7d6-ef179de46057",
            "5e683a0f-881c-449a-a748-b11d06719376",
            "589dd489-8206-4bb0-a499-e273bb50d239"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1046,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "0748af0c-8b6e-41c9-9c6b-464313763eec",
      "title": "",
      "fullFile": "cypress/integration/examples/cookies.spec.js",
      "file": "cypress/integration/examples/cookies.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d2baf2aa-4686-489f-ba11-e5d87dca3a39",
          "title": "Cookies",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.getCookie() - get a browser cookie",
              "fullTitle": "Cookies cy.getCookie() - get a browser cookie",
              "timedOut": null,
              "duration": 934,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/getcookie\ncy.get('#getCookie .set-a-cookie').click();\n// cy.getCookie() yields a cookie object\ncy.getCookie('token').should('have.property', 'value', '123ABC');",
              "err": {},
              "uuid": "81cc1b93-a8c6-46cd-822a-469393ef3c1b",
              "parentUUID": "d2baf2aa-4686-489f-ba11-e5d87dca3a39",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.getCookies() - get browser cookies",
              "fullTitle": "Cookies cy.getCookies() - get browser cookies",
              "timedOut": null,
              "duration": 303,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/getcookies\ncy.getCookies().should('be.empty');\ncy.get('#getCookies .set-a-cookie').click();\n// cy.getCookies() yields an array of cookies\ncy.getCookies().should('have.length', 1).should(function (cookies) {\n    // each cookie has these properties\n    expect(cookies[0]).to.have.property('name', 'token');\n    expect(cookies[0]).to.have.property('value', '123ABC');\n    expect(cookies[0]).to.have.property('httpOnly', false);\n    expect(cookies[0]).to.have.property('secure', false);\n    expect(cookies[0]).to.have.property('domain');\n    expect(cookies[0]).to.have.property('path');\n});",
              "err": {},
              "uuid": "e4db1de9-300b-421e-9ee7-929bc0a1c8e5",
              "parentUUID": "d2baf2aa-4686-489f-ba11-e5d87dca3a39",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.setCookie() - set a browser cookie",
              "fullTitle": "Cookies cy.setCookie() - set a browser cookie",
              "timedOut": null,
              "duration": 199,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/setcookie\ncy.getCookies().should('be.empty');\ncy.setCookie('foo', 'bar');\n// cy.getCookie() yields a cookie object\ncy.getCookie('foo').should('have.property', 'value', 'bar');",
              "err": {},
              "uuid": "890fb8d8-9580-4d1d-8d74-ab3ccba1b3e2",
              "parentUUID": "d2baf2aa-4686-489f-ba11-e5d87dca3a39",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.clearCookie() - clear a browser cookie",
              "fullTitle": "Cookies cy.clearCookie() - clear a browser cookie",
              "timedOut": null,
              "duration": 305,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clearcookie\ncy.getCookie('token').should('be.null');\ncy.get('#clearCookie .set-a-cookie').click();\ncy.getCookie('token').should('have.property', 'value', '123ABC');\n// cy.clearCookies() yields null\ncy.clearCookie('token').should('be.null');\ncy.getCookie('token').should('be.null');",
              "err": {},
              "uuid": "a39ffb8c-1a4c-42c8-bb5e-07ed6a12db4d",
              "parentUUID": "d2baf2aa-4686-489f-ba11-e5d87dca3a39",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.clearCookies() - clear browser cookies",
              "fullTitle": "Cookies cy.clearCookies() - clear browser cookies",
              "timedOut": null,
              "duration": 299,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clearcookies\ncy.getCookies().should('be.empty');\ncy.get('#clearCookies .set-a-cookie').click();\ncy.getCookies().should('have.length', 1);\n// cy.clearCookies() yields null\ncy.clearCookies();\ncy.getCookies().should('be.empty');",
              "err": {},
              "uuid": "b91833c2-cd0a-45bf-9de5-fd556d282fd2",
              "parentUUID": "d2baf2aa-4686-489f-ba11-e5d87dca3a39",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "81cc1b93-a8c6-46cd-822a-469393ef3c1b",
            "e4db1de9-300b-421e-9ee7-929bc0a1c8e5",
            "890fb8d8-9580-4d1d-8d74-ab3ccba1b3e2",
            "a39ffb8c-1a4c-42c8-bb5e-07ed6a12db4d",
            "b91833c2-cd0a-45bf-9de5-fd556d282fd2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2040,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "de62bc4e-1a43-412c-ab66-92508fc24507",
      "title": "",
      "fullFile": "cypress/integration/examples/cypress_api.spec.js",
      "file": "cypress/integration/examples/cypress_api.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6bc1b2f1-401f-4442-8255-b5550147fe14",
          "title": "Cypress.Commands",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".add() - create a custom command",
              "fullTitle": "Cypress.Commands .add() - create a custom command",
              "timedOut": null,
              "duration": 478,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "Cypress.Commands.add('console', {\n    prevSubject: true\n}, function (subject, method) {\n    // the previous subject is automatically received\n    // and the commands arguments are shifted\n    // allow us to change the console method used\n    method = method || 'log';\n    // log the subject to the console\n    // @ts-ignore TS7017\n    console[method]('The subject is', subject);\n    // whatever we return becomes the new subject\n    // we don't want to change the subject so\n    // we return whatever was passed in\n    return subject;\n});\n// @ts-ignore TS2339\ncy.get('button').console('info').then(function ($button) {\n    // subject is still $button\n});",
              "err": {},
              "uuid": "ca265c9f-d40d-4c88-b014-98899aec9ec2",
              "parentUUID": "6bc1b2f1-401f-4442-8255-b5550147fe14",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ca265c9f-d40d-4c88-b014-98899aec9ec2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 478,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "827edbfd-ff33-4cfb-8f8d-a14ae999a1ca",
          "title": "Cypress.Cookies",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".debug() - enable or disable debugging",
              "fullTitle": "Cypress.Cookies .debug() - enable or disable debugging",
              "timedOut": null,
              "duration": 205,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "Cypress.Cookies.debug(true);\n// Cypress will now log in the console when\n// cookies are set or cleared\ncy.setCookie('fakeCookie', '123ABC');\ncy.clearCookie('fakeCookie');\ncy.setCookie('fakeCookie', '123ABC');\ncy.clearCookie('fakeCookie');\ncy.setCookie('fakeCookie', '123ABC');",
              "err": {},
              "uuid": "f542b186-d267-477d-b4a1-de83ca64e1b6",
              "parentUUID": "827edbfd-ff33-4cfb-8f8d-a14ae999a1ca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".preserveOnce() - preserve cookies by key",
              "fullTitle": "Cypress.Cookies .preserveOnce() - preserve cookies by key",
              "timedOut": null,
              "duration": 183,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// normally cookies are reset after each test\ncy.getCookie('fakeCookie').should('not.be.ok');\n// preserving a cookie will not clear it when\n// the next test starts\ncy.setCookie('lastCookie', '789XYZ');\nCypress.Cookies.preserveOnce('lastCookie');",
              "err": {},
              "uuid": "0085cd5c-a986-45ed-93c1-4bdf354c8c56",
              "parentUUID": "827edbfd-ff33-4cfb-8f8d-a14ae999a1ca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".defaults() - set defaults for all cookies",
              "fullTitle": "Cypress.Cookies .defaults() - set defaults for all cookies",
              "timedOut": null,
              "duration": 163,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// now any cookie with the name 'session_id' will\n// not be cleared before each new test runs\nCypress.Cookies.defaults({\n    whitelist: 'session_id'\n});",
              "err": {},
              "uuid": "61033363-3395-4b88-b59f-2feb5c6cffa0",
              "parentUUID": "827edbfd-ff33-4cfb-8f8d-a14ae999a1ca",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f542b186-d267-477d-b4a1-de83ca64e1b6",
            "0085cd5c-a986-45ed-93c1-4bdf354c8c56",
            "61033363-3395-4b88-b59f-2feb5c6cffa0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 551,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f1e9cea8-04e7-4053-bba8-deb10e79b754",
          "title": "Cypress.Server",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".defaults() - change default config of server",
              "fullTitle": "Cypress.Server .defaults() - change default config of server",
              "timedOut": null,
              "duration": 155,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "Cypress.Server.defaults({\n    delay: 0,\n    force404: false\n});",
              "err": {},
              "uuid": "f9849060-403f-4c22-b5d2-c73bdbfe84a5",
              "parentUUID": "f1e9cea8-04e7-4053-bba8-deb10e79b754",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f9849060-403f-4c22-b5d2-c73bdbfe84a5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 155,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5f6643d6-6cd0-4f3e-a422-b810c8486f68",
          "title": "Cypress.arch",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get CPU architecture name of underlying OS",
              "fullTitle": "Cypress.arch Get CPU architecture name of underlying OS",
              "timedOut": null,
              "duration": 156,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/arch\nexpect(Cypress.arch).to.exist;",
              "err": {},
              "uuid": "ac85da8e-0a8c-4eb7-8046-59ebd632f59e",
              "parentUUID": "5f6643d6-6cd0-4f3e-a422-b810c8486f68",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ac85da8e-0a8c-4eb7-8046-59ebd632f59e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 156,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c7ea76f5-6bae-4f83-9474-3aac4bb5fa34",
          "title": "Cypress.config()",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get and set configuration options",
              "fullTitle": "Cypress.config() Get and set configuration options",
              "timedOut": null,
              "duration": 374,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/config\nvar myConfig = Cypress.config();\nexpect(myConfig).to.have.property('animationDistanceThreshold', 5);\nexpect(myConfig).to.have.property('baseUrl', null);\nexpect(myConfig).to.have.property('defaultCommandTimeout', 4000);\nexpect(myConfig).to.have.property('requestTimeout', 5000);\nexpect(myConfig).to.have.property('responseTimeout', 30000);\nexpect(myConfig).to.have.property('viewportHeight', 660);\nexpect(myConfig).to.have.property('viewportWidth', 1000);\nexpect(myConfig).to.have.property('pageLoadTimeout', 60000);\nexpect(myConfig).to.have.property('waitForAnimations', true);\nexpect(Cypress.config('pageLoadTimeout')).to.eq(60000);\n// this will change the config for the rest of your tests!\nCypress.config('pageLoadTimeout', 20000);\nexpect(Cypress.config('pageLoadTimeout')).to.eq(20000);\nCypress.config('pageLoadTimeout', 60000);",
              "err": {
                "message": "AssertionError: expected { Object (baseUrl, ignoreTestFiles, ...) } to have property 'baseUrl' of null, but got 'http://localhost:4200'",
                "estack": "AssertionError: expected { Object (baseUrl, ignoreTestFiles, ...) } to have property 'baseUrl' of null, but got 'http://localhost:4200'\n    at Context.eval (https://example.cypress.io/__cypress/tests?p=cypress/integration/examples/cypress_api.spec.js:92:34)",
                "diff": null
              },
              "uuid": "e69fa7ec-d0f1-49dc-a760-a39eb717c629",
              "parentUUID": "c7ea76f5-6bae-4f83-9474-3aac4bb5fa34",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "e69fa7ec-d0f1-49dc-a760-a39eb717c629"
          ],
          "pending": [],
          "skipped": [],
          "duration": 374,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e958cfd1-d95e-4117-8493-82035efd9983",
          "title": "Cypress.dom",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".isHidden() - determine if a DOM element is hidden",
              "fullTitle": "Cypress.dom .isHidden() - determine if a DOM element is hidden",
              "timedOut": null,
              "duration": 183,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var hiddenP = Cypress.$('.dom-p p.hidden').get(0);\nvar visibleP = Cypress.$('.dom-p p.visible').get(0);\n// our first paragraph has css class 'hidden'\nexpect(Cypress.dom.isHidden(hiddenP)).to.be[\"true\"];\nexpect(Cypress.dom.isHidden(visibleP)).to.be[\"false\"];",
              "err": {},
              "uuid": "05f2126f-b1f6-4bbf-a194-0fb118f7efa1",
              "parentUUID": "e958cfd1-d95e-4117-8493-82035efd9983",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "05f2126f-b1f6-4bbf-a194-0fb118f7efa1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 183,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a30c7568-64f3-4e28-b9d3-1cb3dd4a11c2",
          "title": "Cypress.env()",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get environment variables",
              "fullTitle": "Cypress.env() Get environment variables",
              "timedOut": null,
              "duration": 185,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/env\n// set multiple environment variables\nCypress.env({\n    host: 'veronica.dev.local',\n    api_server: 'http://localhost:8888/v1/'\n});\n// get environment variable\nexpect(Cypress.env('host')).to.eq('veronica.dev.local');\n// set environment variable\nCypress.env('api_server', 'http://localhost:8888/v2/');\nexpect(Cypress.env('api_server')).to.eq('http://localhost:8888/v2/');\n// get all environment variable\nexpect(Cypress.env()).to.have.property('host', 'veronica.dev.local');\nexpect(Cypress.env()).to.have.property('api_server', 'http://localhost:8888/v2/');",
              "err": {},
              "uuid": "a8c53049-d566-423e-bd9e-adc5e9140537",
              "parentUUID": "a30c7568-64f3-4e28-b9d3-1cb3dd4a11c2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a8c53049-d566-423e-bd9e-adc5e9140537"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 185,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5ea8efc2-aa2a-4676-821b-31f4032a84b2",
          "title": "Cypress.log",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Control what is printed to the Command Log",
              "fullTitle": "Cypress.log Control what is printed to the Command Log",
              "timedOut": null,
              "duration": 164,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/cypress-log",
              "err": {},
              "uuid": "57aa16d3-9300-48b5-9076-e2509bb493eb",
              "parentUUID": "5ea8efc2-aa2a-4676-821b-31f4032a84b2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "57aa16d3-9300-48b5-9076-e2509bb493eb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 164,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a5c0ca87-77fa-4e4e-af29-90dde4379a7a",
          "title": "Cypress.platform",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get underlying OS name",
              "fullTitle": "Cypress.platform Get underlying OS name",
              "timedOut": null,
              "duration": 174,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/platform\nexpect(Cypress.platform).to.be.exist;",
              "err": {},
              "uuid": "3c26432b-c29b-4899-9ff6-79dcc740d25c",
              "parentUUID": "a5c0ca87-77fa-4e4e-af29-90dde4379a7a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3c26432b-c29b-4899-9ff6-79dcc740d25c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 174,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a402a8b4-7fc4-45ab-8dbc-2aa548bab01f",
          "title": "Cypress.version",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get current version of Cypress being run",
              "fullTitle": "Cypress.version Get current version of Cypress being run",
              "timedOut": null,
              "duration": 145,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/version\nexpect(Cypress.version).to.be.exist;",
              "err": {},
              "uuid": "6699bf01-98a9-4dd3-bc0a-06ccfb03c02e",
              "parentUUID": "a402a8b4-7fc4-45ab-8dbc-2aa548bab01f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6699bf01-98a9-4dd3-bc0a-06ccfb03c02e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 145,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "676e4f72-a48e-41eb-b436-d70570e5c8f1",
          "title": "Cypress.spec",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get current spec information",
              "fullTitle": "Cypress.spec Get current spec information",
              "timedOut": null,
              "duration": 151,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/spec\n// wrap the object so we can inspect it easily by clicking in the command log\ncy.wrap(Cypress.spec).should('include.keys', ['name', 'relative', 'absolute']);",
              "err": {},
              "uuid": "eabc4d5b-fe80-4ca0-9458-2e9846e46aee",
              "parentUUID": "676e4f72-a48e-41eb-b436-d70570e5c8f1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "eabc4d5b-fe80-4ca0-9458-2e9846e46aee"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 151,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "1cbfffd0-f5d5-4b3b-a191-94f6d04c61e3",
      "title": "",
      "fullFile": "cypress/integration/examples/files.spec.js",
      "file": "cypress/integration/examples/files.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9fcc9f17-151c-4dbf-87db-016bfb405a42",
          "title": "Files",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.fixture() - load a fixture",
              "fullTitle": "Files cy.fixture() - load a fixture",
              "timedOut": null,
              "duration": 851,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/fixture\n// Instead of writing a response inline you can\n// use a fixture file's content.\ncy.server();\ncy.fixture('example.json').as('comment');\n// when application makes an Ajax request matching \"GET comments/*\"\n// Cypress will intercept it and reply with object\n// from the \"comment\" alias\ncy.route('GET', 'comments/*', '@comment').as('getComment');\n// we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get('.fixture-btn').click();\ncy.wait('@getComment').its('responseBody')\n    .should('have.property', 'name')\n    .and('include', 'Using fixtures to represent data');\n// you can also just write the fixture in the route\ncy.route('GET', 'comments/*', 'fixture:example.json').as('getComment');\n// we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get('.fixture-btn').click();\ncy.wait('@getComment').its('responseBody')\n    .should('have.property', 'name')\n    .and('include', 'Using fixtures to represent data');\n// or write fx to represent fixture\n// by default it assumes it's .json\ncy.route('GET', 'comments/*', 'fx:example').as('getComment');\n// we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get('.fixture-btn').click();\ncy.wait('@getComment').its('responseBody')\n    .should('have.property', 'name')\n    .and('include', 'Using fixtures to represent data');",
              "err": {},
              "uuid": "7b80ce0a-3545-4c93-87ea-0909563d4f99",
              "parentUUID": "9fcc9f17-151c-4dbf-87db-016bfb405a42",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.fixture() or require - load a fixture",
              "fullTitle": "Files cy.fixture() or require - load a fixture",
              "timedOut": null,
              "duration": 155,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// we are inside the \"function () { ... }\"\n// callback and can use test context object \"this\"\n// \"this.example\" was loaded in \"beforeEach\" function callback\nexpect(this.example, 'fixture in the test context')\n    .to.deep.equal(requiredExample);\n// or use \"cy.wrap\" and \"should('deep.equal', ...)\" assertion\n// @ts-ignore\ncy.wrap(this.example, 'fixture vs require')\n    .should('deep.equal', requiredExample);",
              "err": {},
              "uuid": "67dac034-dbf5-40eb-90ed-2419da5a3f50",
              "parentUUID": "9fcc9f17-151c-4dbf-87db-016bfb405a42",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.readFile() - read file contents",
              "fullTitle": "Files cy.readFile() - read file contents",
              "timedOut": null,
              "duration": 165,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/readfile\n// You can read a file and yield its contents\n// The filePath is relative to your project's root.\ncy.readFile('cypress.json').then(function (json) {\n    expect(json).to.be.an('object');\n});",
              "err": {},
              "uuid": "a24d4eea-8e83-49fb-b3e3-8341ba7cc808",
              "parentUUID": "9fcc9f17-151c-4dbf-87db-016bfb405a42",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.writeFile() - write to a file",
              "fullTitle": "Files cy.writeFile() - write to a file",
              "timedOut": null,
              "duration": 784,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/writefile\n// You can write to a file\n// Use a response from a request to automatically\n// generate a fixture file for use later\ncy.request('https://jsonplaceholder.cypress.io/users')\n    .then(function (response) {\n    cy.writeFile('cypress/fixtures/users.json', response.body);\n});\ncy.fixture('users').should(function (users) {\n    expect(users[0].name).to.exist;\n});\n// JavaScript arrays and objects are stringified\n// and formatted into text.\ncy.writeFile('cypress/fixtures/profile.json', {\n    id: 8739,\n    name: 'Jane',\n    email: 'jane@example.com'\n});\ncy.fixture('profile').should(function (profile) {\n    expect(profile.name).to.eq('Jane');\n});",
              "err": {},
              "uuid": "0a8aa60a-1dc6-4735-ba06-77c2c88005e8",
              "parentUUID": "9fcc9f17-151c-4dbf-87db-016bfb405a42",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7b80ce0a-3545-4c93-87ea-0909563d4f99",
            "67dac034-dbf5-40eb-90ed-2419da5a3f50",
            "a24d4eea-8e83-49fb-b3e3-8341ba7cc808",
            "0a8aa60a-1dc6-4735-ba06-77c2c88005e8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1955,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "d801518b-3863-40cb-8a5b-7b6fab9b3f86",
      "title": "",
      "fullFile": "cypress/integration/examples/local_storage.spec.js",
      "file": "cypress/integration/examples/local_storage.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "eaa7a84c-4b89-4270-8849-f41ce55f6c32",
          "title": "Local Storage",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.clearLocalStorage() - clear all data in local storage",
              "fullTitle": "Local Storage cy.clearLocalStorage() - clear all data in local storage",
              "timedOut": null,
              "duration": 872,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clearlocalstorage\ncy.get('.ls-btn').click().should(function () {\n    expect(localStorage.getItem('prop1')).to.eq('red');\n    expect(localStorage.getItem('prop2')).to.eq('blue');\n    expect(localStorage.getItem('prop3')).to.eq('magenta');\n});\n// clearLocalStorage() yields the localStorage object\ncy.clearLocalStorage().should(function (ls) {\n    expect(ls.getItem('prop1')).to.be[\"null\"];\n    expect(ls.getItem('prop2')).to.be[\"null\"];\n    expect(ls.getItem('prop3')).to.be[\"null\"];\n});\n// Clear key matching string in Local Storage\ncy.get('.ls-btn').click().should(function () {\n    expect(localStorage.getItem('prop1')).to.eq('red');\n    expect(localStorage.getItem('prop2')).to.eq('blue');\n    expect(localStorage.getItem('prop3')).to.eq('magenta');\n});\ncy.clearLocalStorage('prop1').should(function (ls) {\n    expect(ls.getItem('prop1')).to.be[\"null\"];\n    expect(ls.getItem('prop2')).to.eq('blue');\n    expect(ls.getItem('prop3')).to.eq('magenta');\n});\n// Clear keys matching regex in Local Storage\ncy.get('.ls-btn').click().should(function () {\n    expect(localStorage.getItem('prop1')).to.eq('red');\n    expect(localStorage.getItem('prop2')).to.eq('blue');\n    expect(localStorage.getItem('prop3')).to.eq('magenta');\n});\ncy.clearLocalStorage(/prop1|2/).should(function (ls) {\n    expect(ls.getItem('prop1')).to.be[\"null\"];\n    expect(ls.getItem('prop2')).to.be[\"null\"];\n    expect(ls.getItem('prop3')).to.eq('magenta');\n});",
              "err": {},
              "uuid": "89321506-b962-4e94-b15c-2aa2a356c9d7",
              "parentUUID": "eaa7a84c-4b89-4270-8849-f41ce55f6c32",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "89321506-b962-4e94-b15c-2aa2a356c9d7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 872,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "800e4b1a-7c8f-4532-9545-edd4b5e6061a",
      "title": "",
      "fullFile": "cypress/integration/examples/location.spec.js",
      "file": "cypress/integration/examples/location.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "92c7bd35-a21d-4457-b436-41cfbeefe0e6",
          "title": "Location",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.hash() - get the current URL hash",
              "fullTitle": "Location cy.hash() - get the current URL hash",
              "timedOut": null,
              "duration": 430,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/hash\ncy.hash().should('be.empty');",
              "err": {},
              "uuid": "dc2b83ff-5ffb-4f97-a46b-10f9bec5dd36",
              "parentUUID": "92c7bd35-a21d-4457-b436-41cfbeefe0e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.location() - get window.location",
              "fullTitle": "Location cy.location() - get window.location",
              "timedOut": null,
              "duration": 170,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/location\ncy.location().should(function (location) {\n    expect(location.hash).to.be.empty;\n    expect(location.href).to.eq('https://example.cypress.io/commands/location');\n    expect(location.host).to.eq('example.cypress.io');\n    expect(location.hostname).to.eq('example.cypress.io');\n    expect(location.origin).to.eq('https://example.cypress.io');\n    expect(location.pathname).to.eq('/commands/location');\n    expect(location.port).to.eq('');\n    expect(location.protocol).to.eq('https:');\n    expect(location.search).to.be.empty;\n});",
              "err": {},
              "uuid": "cfcca5df-f257-4007-998a-2ff8ce8c6052",
              "parentUUID": "92c7bd35-a21d-4457-b436-41cfbeefe0e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.url() - get the current URL",
              "fullTitle": "Location cy.url() - get the current URL",
              "timedOut": null,
              "duration": 189,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/url\ncy.url().should('eq', 'https://example.cypress.io/commands/location');",
              "err": {},
              "uuid": "537bafb6-30a9-43f2-ab20-c1719c10ca99",
              "parentUUID": "92c7bd35-a21d-4457-b436-41cfbeefe0e6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dc2b83ff-5ffb-4f97-a46b-10f9bec5dd36",
            "cfcca5df-f257-4007-998a-2ff8ce8c6052",
            "537bafb6-30a9-43f2-ab20-c1719c10ca99"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 789,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "02d99764-59b8-4ad9-9584-92ac5c8eae85",
      "title": "",
      "fullFile": "cypress/integration/examples/misc.spec.js",
      "file": "cypress/integration/examples/misc.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5943925e-ec05-4f4a-aff9-1320b4d7b1cd",
          "title": "Misc",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".end() - end the command chain",
              "fullTitle": "Misc .end() - end the command chain",
              "timedOut": null,
              "duration": 729,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/end\n// cy.end is useful when you want to end a chain of commands\n// and force Cypress to re-query from the root element\ncy.get('.misc-table').within(function () {\n    // ends the current chain and yields null\n    cy.contains('Cheryl').click().end();\n    // queries the entire table again\n    cy.contains('Charles').click();\n});",
              "err": {},
              "uuid": "0a992ba2-b7c0-4899-8086-c85daff12164",
              "parentUUID": "5943925e-ec05-4f4a-aff9-1320b4d7b1cd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.exec() - execute a system command",
              "fullTitle": "Misc cy.exec() - execute a system command",
              "timedOut": null,
              "duration": 320,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// execute a system command.\n// so you can take actions necessary for\n// your test outside the scope of Cypress.\n// https://on.cypress.io/exec\n// we can use Cypress.platform string to\n// select appropriate command\n// https://on.cypress/io/platform\ncy.log(\"Platform \" + Cypress.platform + \" architecture \" + Cypress.arch);\n// on CircleCI Windows build machines we have a failure to run bash shell\n// https://github.com/cypress-io/cypress/issues/5169\n// so skip some of the tests by passing flag \"--env circle=true\"\nvar isCircleOnWindows = Cypress.platform === 'win32' && Cypress.env('circle');\nif (isCircleOnWindows) {\n    cy.log('Skipping test on CircleCI');\n    return;\n}\n// cy.exec problem on Shippable CI\n// https://github.com/cypress-io/cypress/issues/6718\nvar isShippable = Cypress.platform === 'linux' && Cypress.env('shippable');\nif (isShippable) {\n    cy.log('Skipping test on ShippableCI');\n    return;\n}\ncy.exec('echo Jane Lane')\n    .its('stdout').should('contain', 'Jane Lane');\nif (Cypress.platform === 'win32') {\n    cy.exec('print cypress.json')\n        .its('stderr').should('be.empty');\n}\nelse {\n    cy.exec('cat cypress.json')\n        .its('stderr').should('be.empty');\n    cy.exec('pwd')\n        .its('code').should('eq', 0);\n}",
              "err": {},
              "uuid": "6805273b-51f6-424d-a407-48f1bab1fb08",
              "parentUUID": "5943925e-ec05-4f4a-aff9-1320b4d7b1cd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.focused() - get the DOM element that has focus",
              "fullTitle": "Misc cy.focused() - get the DOM element that has focus",
              "timedOut": null,
              "duration": 360,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/focused\ncy.get('.misc-form').find('#name').click();\ncy.focused().should('have.id', 'name');\ncy.get('.misc-form').find('#description').click();\ncy.focused().should('have.id', 'description');",
              "err": {},
              "uuid": "b2627ba9-2535-46a5-9d73-8a86159e4a7f",
              "parentUUID": "5943925e-ec05-4f4a-aff9-1320b4d7b1cd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.wrap() - wrap an object",
              "fullTitle": "Misc cy.wrap() - wrap an object",
              "timedOut": null,
              "duration": 146,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/wrap\ncy.wrap({ foo: 'bar' })\n    .should('have.property', 'foo')\n    .and('include', 'bar');",
              "err": {},
              "uuid": "3467d454-07ac-44c2-90be-1783042f88a3",
              "parentUUID": "5943925e-ec05-4f4a-aff9-1320b4d7b1cd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "d1829e9e-6cb7-45a7-8218-c749df1f8fbb",
              "title": "Cypress.Screenshot",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "cy.screenshot() - take a screenshot",
                  "fullTitle": "Misc Cypress.Screenshot cy.screenshot() - take a screenshot",
                  "timedOut": null,
                  "duration": 1260,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/screenshot\ncy.screenshot('my-image');",
                  "err": {},
                  "uuid": "0161a576-c0d8-4342-ba24-e6e44ccefb7d",
                  "parentUUID": "d1829e9e-6cb7-45a7-8218-c749df1f8fbb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Cypress.Screenshot.defaults() - change default config of screenshots",
                  "fullTitle": "Misc Cypress.Screenshot Cypress.Screenshot.defaults() - change default config of screenshots",
                  "timedOut": null,
                  "duration": 184,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Cypress.Screenshot.defaults({\n    blackout: ['.foo'],\n    capture: 'viewport',\n    clip: { x: 0, y: 0, width: 200, height: 200 },\n    scale: false,\n    disableTimersAndAnimations: true,\n    screenshotOnRunFailure: true,\n    onBeforeScreenshot: function () { },\n    onAfterScreenshot: function () { }\n});",
                  "err": {},
                  "uuid": "ffa9ea21-4f9b-4393-9f97-54884b0c4d6b",
                  "parentUUID": "d1829e9e-6cb7-45a7-8218-c749df1f8fbb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0161a576-c0d8-4342-ba24-e6e44ccefb7d",
                "ffa9ea21-4f9b-4393-9f97-54884b0c4d6b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1444,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "0a992ba2-b7c0-4899-8086-c85daff12164",
            "6805273b-51f6-424d-a407-48f1bab1fb08",
            "b2627ba9-2535-46a5-9d73-8a86159e4a7f",
            "3467d454-07ac-44c2-90be-1783042f88a3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1555,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "de73ba29-8127-451b-973e-4283d37bf1b9",
      "title": "",
      "fullFile": "cypress/integration/examples/navigation.spec.js",
      "file": "cypress/integration/examples/navigation.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "06eb4cb1-05f2-4bcf-9e29-c28a5af299ee",
          "title": "Navigation",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.go() - go back or forward in the browser's history",
              "fullTitle": "Navigation cy.go() - go back or forward in the browser's history",
              "timedOut": null,
              "duration": 1437,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/go\ncy.location('pathname').should('include', 'navigation');\ncy.go('back');\ncy.location('pathname').should('not.include', 'navigation');\ncy.go('forward');\ncy.location('pathname').should('include', 'navigation');\n// clicking back\ncy.go(-1);\ncy.location('pathname').should('not.include', 'navigation');\n// clicking forward\ncy.go(1);\ncy.location('pathname').should('include', 'navigation');",
              "err": {},
              "uuid": "180a080a-c511-424e-8358-291c35fcedb0",
              "parentUUID": "06eb4cb1-05f2-4bcf-9e29-c28a5af299ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.reload() - reload the page",
              "fullTitle": "Navigation cy.reload() - reload the page",
              "timedOut": null,
              "duration": 687,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/reload\ncy.reload();\n// reload the page without using the cache\ncy.reload(true);",
              "err": {},
              "uuid": "e9295d88-5a22-4319-874e-93237bf9031d",
              "parentUUID": "06eb4cb1-05f2-4bcf-9e29-c28a5af299ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.visit() - visit a remote url",
              "fullTitle": "Navigation cy.visit() - visit a remote url",
              "timedOut": null,
              "duration": 567,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/visit\n// Visit any sub-domain of your current domain\n// Pass options to the visit\ncy.visit('https://example.cypress.io/commands/navigation', {\n    timeout: 50000,\n    onBeforeLoad: function (contentWindow) {\n        // contentWindow is the remote page's window object\n        expect(typeof contentWindow === 'object').to.be[\"true\"];\n    },\n    onLoad: function (contentWindow) {\n        // contentWindow is the remote page's window object\n        expect(typeof contentWindow === 'object').to.be[\"true\"];\n    }\n});",
              "err": {},
              "uuid": "532f4029-8b9b-49d4-a179-3a08a23e11b7",
              "parentUUID": "06eb4cb1-05f2-4bcf-9e29-c28a5af299ee",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "180a080a-c511-424e-8358-291c35fcedb0",
            "e9295d88-5a22-4319-874e-93237bf9031d",
            "532f4029-8b9b-49d4-a179-3a08a23e11b7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2691,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "5c27fbc1-bb40-4ba9-a666-b56065c0895b",
      "title": "",
      "fullFile": "cypress/integration/examples/network_requests.spec.js",
      "file": "cypress/integration/examples/network_requests.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0b02048f-465f-4782-b865-8089e9905dd8",
          "title": "Network Requests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.server() - control behavior of network requests and responses",
              "fullTitle": "Network Requests cy.server() - control behavior of network requests and responses",
              "timedOut": null,
              "duration": 892,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/server\ncy.server().should(function (server) {\n    // the default options on server\n    // you can override any of these options\n    expect(server.delay).to.eq(0);\n    expect(server.method).to.eq('GET');\n    expect(server.status).to.eq(200);\n    expect(server.headers).to.be[\"null\"];\n    expect(server.response).to.be[\"null\"];\n    expect(server.onRequest).to.be.undefined;\n    expect(server.onResponse).to.be.undefined;\n    expect(server.onAbort).to.be.undefined;\n    // These options control the server behavior\n    // affecting all requests\n    // pass false to disable existing route stubs\n    expect(server.enable).to.be[\"true\"];\n    // forces requests that don't match your routes to 404\n    expect(server.force404).to.be[\"false\"];\n    // whitelists requests from ever being logged or stubbed\n    expect(server.whitelist).to.be.a('function');\n});\ncy.server({\n    method: 'POST',\n    delay: 1000,\n    status: 422,\n    response: {}\n});\n// any route commands will now inherit the above options\n// from the server. anything we pass specifically\n// to route will override the defaults though.",
              "err": {},
              "uuid": "6d9827af-e3f0-495e-811b-3dc3669cc9ca",
              "parentUUID": "0b02048f-465f-4782-b865-8089e9905dd8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.request() - make an XHR request",
              "fullTitle": "Network Requests cy.request() - make an XHR request",
              "timedOut": null,
              "duration": 1299,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/request\ncy.request('https://jsonplaceholder.cypress.io/comments')\n    .should(function (response) {\n    expect(response.status).to.eq(200);\n    // the server sometimes gets an extra comment posted from another machine\n    // which gets returned as 1 extra object\n    expect(response.body).to.have.property('length').and.be.oneOf([500, 501]);\n    expect(response).to.have.property('headers');\n    expect(response).to.have.property('duration');\n});",
              "err": {},
              "uuid": "3e324372-e96f-46c4-90cf-8de95b812f51",
              "parentUUID": "0b02048f-465f-4782-b865-8089e9905dd8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.request() - verify response using BDD syntax",
              "fullTitle": "Network Requests cy.request() - verify response using BDD syntax",
              "timedOut": null,
              "duration": 2302,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('https://jsonplaceholder.cypress.io/comments')\n    .then(function (response) {\n    // https://on.cypress.io/assertions\n    expect(response).property('status').to.equal(200);\n    expect(response).property('body').to.have.property('length').and.be.oneOf([500, 501]);\n    expect(response).to.include.keys('headers', 'duration');\n});",
              "err": {},
              "uuid": "d453dd5b-48c5-46d7-a0d1-ad2400620de9",
              "parentUUID": "0b02048f-465f-4782-b865-8089e9905dd8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.request() with query parameters",
              "fullTitle": "Network Requests cy.request() with query parameters",
              "timedOut": null,
              "duration": 807,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// will execute request\n// https://jsonplaceholder.cypress.io/comments?postId=1&id=3\ncy.request({\n    url: 'https://jsonplaceholder.cypress.io/comments',\n    qs: {\n        postId: 1,\n        id: 3\n    }\n})\n    .its('body')\n    .should('be.an', 'array')\n    .and('have.length', 1)\n    .its('0') // yields first element of the array\n    .should('contain', {\n    postId: 1,\n    id: 3\n});",
              "err": {},
              "uuid": "cd8563aa-db8f-451f-ae04-b6431a00cbf0",
              "parentUUID": "0b02048f-465f-4782-b865-8089e9905dd8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.request() - pass result to the second request",
              "fullTitle": "Network Requests cy.request() - pass result to the second request",
              "timedOut": null,
              "duration": 1414,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// first, let's find out the userId of the first user we have\ncy.request('https://jsonplaceholder.cypress.io/users?_limit=1')\n    .its('body') // yields the response object\n    .its('0') // yields the first element of the returned list\n    // the above two commands its('body').its('0')\n    // can be written as its('body.0')\n    // if you do not care about TypeScript checks\n    .then(function (user) {\n    expect(user).property('id').to.be.a('number');\n    // make a new post on behalf of the user\n    cy.request('POST', 'https://jsonplaceholder.cypress.io/posts', {\n        userId: user.id,\n        title: 'Cypress Test Runner',\n        body: 'Fast, easy and reliable testing for anything that runs in a browser.'\n    });\n})\n    // note that the value here is the returned value of the 2nd request\n    // which is the new post object\n    .then(function (response) {\n    expect(response).property('status').to.equal(201); // new entity created\n    expect(response).property('body').to.contain({\n        title: 'Cypress Test Runner'\n    });\n    // we don't know the exact post id - only that it will be > 100\n    // since JSONPlaceholder has built-in 100 posts\n    expect(response.body).property('id').to.be.a('number')\n        .and.to.be.gt(100);\n    // we don't know the user id here - since it was in above closure\n    // so in this test just confirm that the property is there\n    expect(response.body).property('userId').to.be.a('number');\n});",
              "err": {},
              "uuid": "0e095128-d3a9-49c6-af87-affec702c30b",
              "parentUUID": "0b02048f-465f-4782-b865-8089e9905dd8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.request() - save response in the shared test context",
              "fullTitle": "Network Requests cy.request() - save response in the shared test context",
              "timedOut": null,
              "duration": 1082,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/variables-and-aliases\ncy.request('https://jsonplaceholder.cypress.io/users?_limit=1')\n    .its('body').its('0') // yields the first element of the returned list\n    .as('user') // saves the object in the test context\n    .then(function () {\n    // NOTE ðŸ‘€\n    //  By the time this callback runs the \"as('user')\" command\n    //  has saved the user object in the test context.\n    //  To access the test context we need to use\n    //  the \"function () { ... }\" callback form,\n    //  otherwise \"this\" points at a wrong or undefined object!\n    cy.request('POST', 'https://jsonplaceholder.cypress.io/posts', {\n        userId: this.user.id,\n        title: 'Cypress Test Runner',\n        body: 'Fast, easy and reliable testing for anything that runs in a browser.'\n    })\n        .its('body').as('post'); // save the new post from the response\n})\n    .then(function () {\n    // When this callback runs, both \"cy.request\" API commands have finished\n    // and the test context has \"user\" and \"post\" objects set.\n    // Let's verify them.\n    expect(this.post, 'post has the right user id').property('userId').to.equal(this.user.id);\n});",
              "err": {},
              "uuid": "be249f10-a245-4869-8f68-706524edab0c",
              "parentUUID": "0b02048f-465f-4782-b865-8089e9905dd8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.route() - route responses to matching requests",
              "fullTitle": "Network Requests cy.route() - route responses to matching requests",
              "timedOut": null,
              "duration": 1959,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/route\nvar message = 'whoa, this comment does not exist';\ncy.server();\n// Listen to GET to comments/1\ncy.route('GET', 'comments/*').as('getComment');\n// we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get('.network-btn').click();\n// https://on.cypress.io/wait\ncy.wait('@getComment').its('status').should('eq', 200);\n// Listen to POST to comments\ncy.route('POST', '/comments').as('postComment');\n// we have code that posts a comment when\n// the button is clicked in scripts.js\ncy.get('.network-post').click();\ncy.wait('@postComment').should(function (xhr) {\n    expect(xhr.requestBody).to.include('email');\n    expect(xhr.requestHeaders).to.have.property('Content-Type');\n    expect(xhr.responseBody).to.have.property('name', 'Using POST in cy.route()');\n});\n// Stub a response to PUT comments/ ****\ncy.route({\n    method: 'PUT',\n    url: 'comments/*',\n    status: 404,\n    response: { error: message },\n    delay: 500\n}).as('putComment');\n// we have code that puts a comment when\n// the button is clicked in scripts.js\ncy.get('.network-put').click();\ncy.wait('@putComment');\n// our 404 statusCode logic in scripts.js executed\ncy.get('.network-put-comment').should('contain', message);",
              "err": {},
              "uuid": "4892eb56-578b-4bf2-aa7a-fff586c31571",
              "parentUUID": "0b02048f-465f-4782-b865-8089e9905dd8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6d9827af-e3f0-495e-811b-3dc3669cc9ca",
            "3e324372-e96f-46c4-90cf-8de95b812f51",
            "d453dd5b-48c5-46d7-a0d1-ad2400620de9",
            "cd8563aa-db8f-451f-ae04-b6431a00cbf0",
            "0e095128-d3a9-49c6-af87-affec702c30b",
            "be249f10-a245-4869-8f68-706524edab0c",
            "4892eb56-578b-4bf2-aa7a-fff586c31571"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9755,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "52fc61f4-2e02-43dc-be9b-c8041730f2fd",
      "title": "",
      "fullFile": "cypress/integration/examples/querying.spec.js",
      "file": "cypress/integration/examples/querying.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0ab033aa-dcf6-4683-8bf0-356f58df5edc",
          "title": "Querying",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.get() - query DOM elements",
              "fullTitle": "Querying cy.get() - query DOM elements",
              "timedOut": null,
              "duration": 565,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/get\ncy.get('#query-btn').should('contain', 'Button');\ncy.get('.query-btn').should('contain', 'Button');\ncy.get('#querying .well>button:first').should('contain', 'Button');\n//              â†²\n// Use CSS selectors just like jQuery\ncy.get('[data-test-id=\"test-example\"]').should('have.class', 'example');\n// 'cy.get()' yields jQuery object, you can get its attribute\n// by invoking `.attr()` method\ncy.get('[data-test-id=\"test-example\"]')\n    .invoke('attr', 'data-test-id')\n    .should('equal', 'test-example');\n// or you can get element's CSS property\ncy.get('[data-test-id=\"test-example\"]')\n    .invoke('css', 'position')\n    .should('equal', 'static');\n// or use assertions directly during 'cy.get()'\n// https://on.cypress.io/assertions\ncy.get('[data-test-id=\"test-example\"]')\n    .should('have.attr', 'data-test-id', 'test-example')\n    .and('have.css', 'position', 'static');",
              "err": {},
              "uuid": "54e43a1a-e2e7-4255-83fe-2135e13f357b",
              "parentUUID": "0ab033aa-dcf6-4683-8bf0-356f58df5edc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.contains() - query DOM elements with matching content",
              "fullTitle": "Querying cy.contains() - query DOM elements with matching content",
              "timedOut": null,
              "duration": 220,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/contains\ncy.get('.query-list')\n    .contains('bananas')\n    .should('have.class', 'third');\n// we can pass a regexp to `.contains()`\ncy.get('.query-list')\n    .contains(/^b\\w+/)\n    .should('have.class', 'third');\ncy.get('.query-list')\n    .contains('apples')\n    .should('have.class', 'first');\n// passing a selector to contains will\n// yield the selector containing the text\ncy.get('#querying')\n    .contains('ul', 'oranges')\n    .should('have.class', 'query-list');\ncy.get('.query-button')\n    .contains('Save Form')\n    .should('have.class', 'btn');",
              "err": {},
              "uuid": "dd935ce5-4d49-4395-b1db-4ed6383c0f78",
              "parentUUID": "0ab033aa-dcf6-4683-8bf0-356f58df5edc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".within() - query DOM elements within a specific element",
              "fullTitle": "Querying .within() - query DOM elements within a specific element",
              "timedOut": null,
              "duration": 198,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/within\ncy.get('.query-form').within(function () {\n    cy.get('input:first').should('have.attr', 'placeholder', 'Email');\n    cy.get('input:last').should('have.attr', 'placeholder', 'Password');\n});",
              "err": {},
              "uuid": "88789e17-b92b-47ac-904b-dcd4ec5511d4",
              "parentUUID": "0ab033aa-dcf6-4683-8bf0-356f58df5edc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.root() - query the root DOM element",
              "fullTitle": "Querying cy.root() - query the root DOM element",
              "timedOut": null,
              "duration": 152,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/root\n// By default, root is the document\ncy.root().should('match', 'html');\ncy.get('.query-ul').within(function () {\n    // In this within, the root is now the ul DOM element\n    cy.root().should('have.class', 'query-ul');\n});",
              "err": {},
              "uuid": "f6349cbe-2866-4f2a-b9a4-d03ceb42e74a",
              "parentUUID": "0ab033aa-dcf6-4683-8bf0-356f58df5edc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "best practices - selecting elements",
              "fullTitle": "Querying best practices - selecting elements",
              "timedOut": null,
              "duration": 764,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/best-practices#Selecting-Elements\ncy.get('[data-cy=best-practices-selecting-elements]').within(function () {\n    // Worst - too generic, no context\n    cy.get('button').click();\n    // Bad. Coupled to styling. Highly subject to change.\n    cy.get('.btn.btn-large').click();\n    // Average. Coupled to the `name` attribute which has HTML semantics.\n    cy.get('[name=submission]').click();\n    // Better. But still coupled to styling or JS event listeners.\n    cy.get('#main').click();\n    // Slightly better. Uses an ID but also ensures the element\n    // has an ARIA role attribute\n    cy.get('#main[role=button]').click();\n    // Much better. But still coupled to text content that may change.\n    cy.contains('Submit').click();\n    // Best. Insulated from all changes.\n    cy.get('[data-cy=submit]').click();\n});",
              "err": {},
              "uuid": "e782875c-7677-42ab-96df-1a22346caa04",
              "parentUUID": "0ab033aa-dcf6-4683-8bf0-356f58df5edc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "54e43a1a-e2e7-4255-83fe-2135e13f357b",
            "dd935ce5-4d49-4395-b1db-4ed6383c0f78",
            "88789e17-b92b-47ac-904b-dcd4ec5511d4",
            "f6349cbe-2866-4f2a-b9a4-d03ceb42e74a",
            "e782875c-7677-42ab-96df-1a22346caa04"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1899,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a405d7a4-aa84-4c76-a191-f6dba109e417",
      "title": "",
      "fullFile": "cypress/integration/examples/spies_stubs_clocks.spec.js",
      "file": "cypress/integration/examples/spies_stubs_clocks.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2fff6be4-5bb5-4d7a-840f-46b3388909e9",
          "title": "Spies, Stubs, and Clock",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.spy() - wrap a method in a spy",
              "fullTitle": "Spies, Stubs, and Clock cy.spy() - wrap a method in a spy",
              "timedOut": null,
              "duration": 517,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/spy\ncy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\nvar obj = {\n    foo: function () { }\n};\nvar spy = cy.spy(obj, 'foo').as('anyArgs');\nobj.foo();\nexpect(spy).to.be.called;",
              "err": {},
              "uuid": "0bf39a72-14a4-4a25-9c0a-00b41437a7ce",
              "parentUUID": "2fff6be4-5bb5-4d7a-840f-46b3388909e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.spy() retries until assertions pass",
              "fullTitle": "Spies, Stubs, and Clock cy.spy() retries until assertions pass",
              "timedOut": null,
              "duration": 2535,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\nvar obj = {\n    /**\n     * Prints the argument passed\n     * @param x {any}\n    */\n    foo: function (x) {\n        console.log('obj.foo called with', x);\n    }\n};\ncy.spy(obj, 'foo').as('foo');\nsetTimeout(function () {\n    obj.foo('first');\n}, 500);\nsetTimeout(function () {\n    obj.foo('second');\n}, 2500);\ncy.get('@foo').should('have.been.calledTwice');",
              "err": {},
              "uuid": "d9a6657f-538b-4ccb-9c50-cbf2437aebcd",
              "parentUUID": "2fff6be4-5bb5-4d7a-840f-46b3388909e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.stub() - create a stub and/or replace a function with stub",
              "fullTitle": "Spies, Stubs, and Clock cy.stub() - create a stub and/or replace a function with stub",
              "timedOut": null,
              "duration": 202,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/stub\ncy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\nvar obj = {\n    /**\n     * prints both arguments to the console\n     * @param a {string}\n     * @param b {string}\n    */\n    foo: function (a, b) {\n        console.log('a', a, 'b', b);\n    }\n};\nvar stub = cy.stub(obj, 'foo').as('foo');\nobj.foo('foo', 'bar');\nexpect(stub).to.be.called;",
              "err": {},
              "uuid": "ef582047-9d57-4a37-9143-38c5266d153b",
              "parentUUID": "2fff6be4-5bb5-4d7a-840f-46b3388909e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.clock() - control time in the browser",
              "fullTitle": "Spies, Stubs, and Clock cy.clock() - control time in the browser",
              "timedOut": null,
              "duration": 279,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clock\n// create the date in UTC so its always the same\n// no matter what local timezone the browser is running in\nvar now = new Date(Date.UTC(2017, 2, 14)).getTime();\ncy.clock(now);\ncy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\ncy.get('#clock-div').click()\n    .should('have.text', '1489449600');",
              "err": {},
              "uuid": "412b6ff0-68f3-41e2-8bbd-c43b9afebc64",
              "parentUUID": "2fff6be4-5bb5-4d7a-840f-46b3388909e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.tick() - move time in the browser",
              "fullTitle": "Spies, Stubs, and Clock cy.tick() - move time in the browser",
              "timedOut": null,
              "duration": 361,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/tick\n// create the date in UTC so its always the same\n// no matter what local timezone the browser is running in\nvar now = new Date(Date.UTC(2017, 2, 14)).getTime();\ncy.clock(now);\ncy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\ncy.get('#tick-div').click()\n    .should('have.text', '1489449600');\ncy.tick(10000); // 10 seconds passed\ncy.get('#tick-div').click()\n    .should('have.text', '1489449610');",
              "err": {},
              "uuid": "9ad8fc26-f9f9-4197-9500-53897fb46dc3",
              "parentUUID": "2fff6be4-5bb5-4d7a-840f-46b3388909e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.stub() matches depending on arguments",
              "fullTitle": "Spies, Stubs, and Clock cy.stub() matches depending on arguments",
              "timedOut": null,
              "duration": 40,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// see all possible matchers at\n// https://sinonjs.org/releases/latest/matchers/\nvar greeter = {\n    /**\n     * Greets a person\n     * @param {string} name\n    */\n    greet: function (name) {\n        return \"Hello, \" + name + \"!\";\n    }\n};\ncy.stub(greeter, 'greet')\n    .callThrough() // if you want non-matched calls to call the real method\n    .withArgs(Cypress.sinon.match.string).returns('Hi')\n    .withArgs(Cypress.sinon.match.number).throws(new Error('Invalid name'));\nexpect(greeter.greet('World')).to.equal('Hi');\n// @ts-ignore\nexpect(function () { return greeter.greet(42); }).to[\"throw\"]('Invalid name');\nexpect(greeter.greet).to.have.been.calledTwice;\n// non-matched calls goes the actual method\n// @ts-ignore\nexpect(greeter.greet()).to.equal('Hello, undefined!');",
              "err": {},
              "uuid": "f864f87f-3aec-4559-8a03-01f03674a207",
              "parentUUID": "2fff6be4-5bb5-4d7a-840f-46b3388909e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "matches call arguments using Sinon matchers",
              "fullTitle": "Spies, Stubs, and Clock matches call arguments using Sinon matchers",
              "timedOut": null,
              "duration": 29,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// see all possible matchers at\n// https://sinonjs.org/releases/latest/matchers/\nvar calculator = {\n    /**\n     * returns the sum of two arguments\n     * @param a {number}\n     * @param b {number}\n    */\n    add: function (a, b) {\n        return a + b;\n    }\n};\nvar spy = cy.spy(calculator, 'add').as('add');\nexpect(calculator.add(2, 3)).to.equal(5);\n// if we want to assert the exact values used during the call\nexpect(spy).to.be.calledWith(2, 3);\n// let's confirm \"add\" method was called with two numbers\nexpect(spy).to.be.calledWith(Cypress.sinon.match.number, Cypress.sinon.match.number);\n// alternatively, provide the value to match\nexpect(spy).to.be.calledWith(Cypress.sinon.match(2), Cypress.sinon.match(3));\n// match any value\nexpect(spy).to.be.calledWith(Cypress.sinon.match.any, 3);\n// match any value from a list\nexpect(spy).to.be.calledWith(Cypress.sinon.match[\"in\"]([1, 2, 3]), 3);\n/**\n * Returns true if the given number is event\n * @param {number} x\n */\nvar isEven = function (x) { return x % 2 === 0; };\n// expect the value to pass a custom predicate function\n// the second argument to \"sinon.match(predicate, message)\" is\n// shown if the predicate does not pass and assertion fails\nexpect(spy).to.be.calledWith(Cypress.sinon.match(isEven, 'isEven'), 3);\n/**\n * Returns a function that checks if a given number is larger than the limit\n * @param {number} limit\n * @returns {(x: number) => boolean}\n */\nvar isGreaterThan = function (limit) { return function (x) { return x > limit; }; };\n/**\n * Returns a function that checks if a given number is less than the limit\n * @param {number} limit\n * @returns {(x: number) => boolean}\n */\nvar isLessThan = function (limit) { return function (x) { return x < limit; }; };\n// you can combine several matchers using \"and\", \"or\"\nexpect(spy).to.be.calledWith(Cypress.sinon.match.number, Cypress.sinon.match(isGreaterThan(2), '> 2').and(Cypress.sinon.match(isLessThan(4), '< 4')));\nexpect(spy).to.be.calledWith(Cypress.sinon.match.number, Cypress.sinon.match(isGreaterThan(200), '> 200').or(Cypress.sinon.match(3)));\n// matchers can be used from BDD assertions\ncy.get('@add').should('have.been.calledWith', Cypress.sinon.match.number, Cypress.sinon.match(3));\n// you can alias matchers for shorter test code\nvar M = Cypress.sinon.match;\ncy.get('@add').should('have.been.calledWith', M.number, M(3));",
              "err": {},
              "uuid": "c1cf5b9c-cfe4-4e94-ad50-c65a758d7948",
              "parentUUID": "2fff6be4-5bb5-4d7a-840f-46b3388909e9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0bf39a72-14a4-4a25-9c0a-00b41437a7ce",
            "d9a6657f-538b-4ccb-9c50-cbf2437aebcd",
            "ef582047-9d57-4a37-9143-38c5266d153b",
            "412b6ff0-68f3-41e2-8bbd-c43b9afebc64",
            "9ad8fc26-f9f9-4197-9500-53897fb46dc3",
            "f864f87f-3aec-4559-8a03-01f03674a207",
            "c1cf5b9c-cfe4-4e94-ad50-c65a758d7948"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3963,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "95aaaddc-ed7a-4e87-a970-48407bdc862a",
      "title": "",
      "fullFile": "cypress/integration/examples/traversal.spec.js",
      "file": "cypress/integration/examples/traversal.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e2d11837-ddc5-4de3-9b53-a51e79e4df6a",
          "title": "Traversal",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".children() - get child DOM elements",
              "fullTitle": "Traversal .children() - get child DOM elements",
              "timedOut": null,
              "duration": 607,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/children\ncy.get('.traversal-breadcrumb')\n    .children('.active')\n    .should('contain', 'Data');",
              "err": {},
              "uuid": "00033764-bfa0-49e5-a68f-76f159d215a4",
              "parentUUID": "e2d11837-ddc5-4de3-9b53-a51e79e4df6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".closest() - get closest ancestor DOM element",
              "fullTitle": "Traversal .closest() - get closest ancestor DOM element",
              "timedOut": null,
              "duration": 170,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/closest\ncy.get('.traversal-badge')\n    .closest('ul')\n    .should('have.class', 'list-group');",
              "err": {},
              "uuid": "45b89e4f-c3e3-40af-a7fb-20296fa950c7",
              "parentUUID": "e2d11837-ddc5-4de3-9b53-a51e79e4df6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".eq() - get a DOM element at a specific index",
              "fullTitle": "Traversal .eq() - get a DOM element at a specific index",
              "timedOut": null,
              "duration": 160,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/eq\ncy.get('.traversal-list>li')\n    .eq(1).should('contain', 'siamese');",
              "err": {},
              "uuid": "3e3443b6-df14-44cc-89b0-e57d941c0706",
              "parentUUID": "e2d11837-ddc5-4de3-9b53-a51e79e4df6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".filter() - get DOM elements that match the selector",
              "fullTitle": "Traversal .filter() - get DOM elements that match the selector",
              "timedOut": null,
              "duration": 169,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/filter\ncy.get('.traversal-nav>li')\n    .filter('.active').should('contain', 'About');",
              "err": {},
              "uuid": "c60d71c4-8557-495d-b072-960e8f7b3ed6",
              "parentUUID": "e2d11837-ddc5-4de3-9b53-a51e79e4df6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".find() - get descendant DOM elements of the selector",
              "fullTitle": "Traversal .find() - get descendant DOM elements of the selector",
              "timedOut": null,
              "duration": 188,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/find\ncy.get('.traversal-pagination')\n    .find('li').find('a')\n    .should('have.length', 7);",
              "err": {},
              "uuid": "fbdec79e-1107-48be-8449-03d1cc6fc0ce",
              "parentUUID": "e2d11837-ddc5-4de3-9b53-a51e79e4df6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".first() - get first DOM element",
              "fullTitle": "Traversal .first() - get first DOM element",
              "timedOut": null,
              "duration": 177,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/first\ncy.get('.traversal-table td')\n    .first().should('contain', '1');",
              "err": {},
              "uuid": "700d0937-eb4a-471f-8121-f81a36f26f46",
              "parentUUID": "e2d11837-ddc5-4de3-9b53-a51e79e4df6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".last() - get last DOM element",
              "fullTitle": "Traversal .last() - get last DOM element",
              "timedOut": null,
              "duration": 179,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/last\ncy.get('.traversal-buttons .btn')\n    .last().should('contain', 'Submit');",
              "err": {},
              "uuid": "30f91419-c83d-4c9d-9458-bb1b1b809f05",
              "parentUUID": "e2d11837-ddc5-4de3-9b53-a51e79e4df6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".next() - get next sibling DOM element",
              "fullTitle": "Traversal .next() - get next sibling DOM element",
              "timedOut": null,
              "duration": 162,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/next\ncy.get('.traversal-ul')\n    .contains('apples').next().should('contain', 'oranges');",
              "err": {},
              "uuid": "a959cc1d-4d8e-47c4-b948-3994b018b582",
              "parentUUID": "e2d11837-ddc5-4de3-9b53-a51e79e4df6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".nextAll() - get all next sibling DOM elements",
              "fullTitle": "Traversal .nextAll() - get all next sibling DOM elements",
              "timedOut": null,
              "duration": 178,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/nextall\ncy.get('.traversal-next-all')\n    .contains('oranges')\n    .nextAll().should('have.length', 3);",
              "err": {},
              "uuid": "eb837e80-7499-42e8-89fa-713d4df25edc",
              "parentUUID": "e2d11837-ddc5-4de3-9b53-a51e79e4df6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".nextUntil() - get next sibling DOM elements until next el",
              "fullTitle": "Traversal .nextUntil() - get next sibling DOM elements until next el",
              "timedOut": null,
              "duration": 156,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/nextuntil\ncy.get('#veggies')\n    .nextUntil('#nuts').should('have.length', 3);",
              "err": {},
              "uuid": "ad305a3e-ffd2-4389-a3a2-066414bfb5f6",
              "parentUUID": "e2d11837-ddc5-4de3-9b53-a51e79e4df6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".not() - remove DOM elements from set of DOM elements",
              "fullTitle": "Traversal .not() - remove DOM elements from set of DOM elements",
              "timedOut": null,
              "duration": 179,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/not\ncy.get('.traversal-disabled .btn')\n    .not('[disabled]').should('not.contain', 'Disabled');",
              "err": {},
              "uuid": "ab5b41ec-cc02-44e8-8537-f4898d4cf961",
              "parentUUID": "e2d11837-ddc5-4de3-9b53-a51e79e4df6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".parent() - get parent DOM element from DOM elements",
              "fullTitle": "Traversal .parent() - get parent DOM element from DOM elements",
              "timedOut": null,
              "duration": 164,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/parent\ncy.get('.traversal-mark')\n    .parent().should('contain', 'Morbi leo risus');",
              "err": {},
              "uuid": "d620b028-b396-4da9-8530-b3f53eaadcb8",
              "parentUUID": "e2d11837-ddc5-4de3-9b53-a51e79e4df6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".parents() - get parent DOM elements from DOM elements",
              "fullTitle": "Traversal .parents() - get parent DOM elements from DOM elements",
              "timedOut": null,
              "duration": 162,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/parents\ncy.get('.traversal-cite')\n    .parents().should('match', 'blockquote');",
              "err": {},
              "uuid": "a8510510-21ee-486a-8685-90dccfd3af41",
              "parentUUID": "e2d11837-ddc5-4de3-9b53-a51e79e4df6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".parentsUntil() - get parent DOM elements from DOM elements until el",
              "fullTitle": "Traversal .parentsUntil() - get parent DOM elements from DOM elements until el",
              "timedOut": null,
              "duration": 188,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/parentsuntil\ncy.get('.clothes-nav')\n    .find('.active')\n    .parentsUntil('.clothes-nav')\n    .should('have.length', 2);",
              "err": {},
              "uuid": "e99bb4c6-e368-48c7-b38b-9a51474200a8",
              "parentUUID": "e2d11837-ddc5-4de3-9b53-a51e79e4df6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".prev() - get previous sibling DOM element",
              "fullTitle": "Traversal .prev() - get previous sibling DOM element",
              "timedOut": null,
              "duration": 174,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/prev\ncy.get('.birds').find('.active')\n    .prev().should('contain', 'Lorikeets');",
              "err": {},
              "uuid": "e8d41305-50cc-4d22-a381-b0c6d048d6f4",
              "parentUUID": "e2d11837-ddc5-4de3-9b53-a51e79e4df6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".prevAll() - get all previous sibling DOM elements",
              "fullTitle": "Traversal .prevAll() - get all previous sibling DOM elements",
              "timedOut": null,
              "duration": 162,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/prevAll\ncy.get('.fruits-list').find('.third')\n    .prevAll().should('have.length', 2);",
              "err": {},
              "uuid": "6c77f8ba-bf91-47fa-b912-911f097b49fe",
              "parentUUID": "e2d11837-ddc5-4de3-9b53-a51e79e4df6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".prevUntil() - get all previous sibling DOM elements until el",
              "fullTitle": "Traversal .prevUntil() - get all previous sibling DOM elements until el",
              "timedOut": null,
              "duration": 183,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/prevUntil\ncy.get('.foods-list').find('#nuts')\n    .prevUntil('#veggies').should('have.length', 3);",
              "err": {},
              "uuid": "5c630978-a2b3-463e-8fee-9e42617ba008",
              "parentUUID": "e2d11837-ddc5-4de3-9b53-a51e79e4df6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".siblings() - get all sibling DOM elements",
              "fullTitle": "Traversal .siblings() - get all sibling DOM elements",
              "timedOut": null,
              "duration": 159,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/siblings\ncy.get('.traversal-pills .active')\n    .siblings().should('have.length', 2);",
              "err": {},
              "uuid": "4ed2b65f-7d21-44fa-a094-ed07c5c242d6",
              "parentUUID": "e2d11837-ddc5-4de3-9b53-a51e79e4df6a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "00033764-bfa0-49e5-a68f-76f159d215a4",
            "45b89e4f-c3e3-40af-a7fb-20296fa950c7",
            "3e3443b6-df14-44cc-89b0-e57d941c0706",
            "c60d71c4-8557-495d-b072-960e8f7b3ed6",
            "fbdec79e-1107-48be-8449-03d1cc6fc0ce",
            "700d0937-eb4a-471f-8121-f81a36f26f46",
            "30f91419-c83d-4c9d-9458-bb1b1b809f05",
            "a959cc1d-4d8e-47c4-b948-3994b018b582",
            "eb837e80-7499-42e8-89fa-713d4df25edc",
            "ad305a3e-ffd2-4389-a3a2-066414bfb5f6",
            "ab5b41ec-cc02-44e8-8537-f4898d4cf961",
            "d620b028-b396-4da9-8530-b3f53eaadcb8",
            "a8510510-21ee-486a-8685-90dccfd3af41",
            "e99bb4c6-e368-48c7-b38b-9a51474200a8",
            "e8d41305-50cc-4d22-a381-b0c6d048d6f4",
            "6c77f8ba-bf91-47fa-b912-911f097b49fe",
            "5c630978-a2b3-463e-8fee-9e42617ba008",
            "4ed2b65f-7d21-44fa-a094-ed07c5c242d6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3517,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "68dee1f0-07f4-48a3-b61b-ce496cf7df53",
      "title": "",
      "fullFile": "cypress/integration/examples/utilities.spec.js",
      "file": "cypress/integration/examples/utilities.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4df5253a-41d3-45de-88f3-370d7565d20a",
          "title": "Utilities",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Cypress._ - call a lodash method",
              "fullTitle": "Utilities Cypress._ - call a lodash method",
              "timedOut": null,
              "duration": 1102,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/_\ncy.request('https://jsonplaceholder.cypress.io/users')\n    .then(function (response) {\n    var ids = Cypress._.chain(response.body).map('id').take(3).value();\n    expect(ids).to.deep.eq([1, 2, 3]);\n});",
              "err": {},
              "uuid": "5ff74bcd-f5b5-4498-8ab2-1b53ee09d0e2",
              "parentUUID": "4df5253a-41d3-45de-88f3-370d7565d20a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.$ - call a jQuery method",
              "fullTitle": "Utilities Cypress.$ - call a jQuery method",
              "timedOut": null,
              "duration": 299,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/$\nvar $li = Cypress.$('.utility-jquery li:first');\ncy.wrap($li)\n    .should('not.have.class', 'active')\n    .click()\n    .should('have.class', 'active');",
              "err": {},
              "uuid": "c6474bad-006f-44fa-bf78-b7e9b05fa251",
              "parentUUID": "4df5253a-41d3-45de-88f3-370d7565d20a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.Blob - blob utilities and base64 string conversion",
              "fullTitle": "Utilities Cypress.Blob - blob utilities and base64 string conversion",
              "timedOut": null,
              "duration": 515,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/blob\ncy.get('.utility-blob').then(function ($div) {\n    // https://github.com/nolanlawson/blob-util#imgSrcToDataURL\n    // get the dataUrl string for the javascript-logo\n    return Cypress.Blob.imgSrcToDataURL('https://example.cypress.io/assets/img/javascript-logo.png', undefined, 'anonymous')\n        .then(function (dataUrl) {\n        // create an <img> element and set its src to the dataUrl\n        var img = Cypress.$('<img />', { src: dataUrl });\n        // need to explicitly return cy here since we are initially returning\n        // the Cypress.Blob.imgSrcToDataURL promise to our test\n        // append the image\n        $div.append(img);\n        cy.get('.utility-blob img').click()\n            .should('have.attr', 'src', dataUrl);\n    });\n});",
              "err": {},
              "uuid": "bcf3ec23-dacf-4e5d-897b-2dab1accb11e",
              "parentUUID": "4df5253a-41d3-45de-88f3-370d7565d20a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.minimatch - test out glob patterns against strings",
              "fullTitle": "Utilities Cypress.minimatch - test out glob patterns against strings",
              "timedOut": null,
              "duration": 168,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/minimatch\nvar matching = Cypress.minimatch('/users/1/comments', '/users/*/comments', {\n    matchBase: true\n});\nexpect(matching, 'matching wildcard').to.be[\"true\"];\nmatching = Cypress.minimatch('/users/1/comments/2', '/users/*/comments', {\n    matchBase: true\n});\nexpect(matching, 'comments').to.be[\"false\"];\n// ** matches against all downstream path segments\nmatching = Cypress.minimatch('/foo/bar/baz/123/quux?a=b&c=2', '/foo/**', {\n    matchBase: true\n});\nexpect(matching, 'comments').to.be[\"true\"];\n// whereas * matches only the next path segment\nmatching = Cypress.minimatch('/foo/bar/baz/123/quux?a=b&c=2', '/foo/*', {\n    matchBase: false\n});\nexpect(matching, 'comments').to.be[\"false\"];",
              "err": {},
              "uuid": "6970a58f-57c0-4237-bf63-0c2945955454",
              "parentUUID": "4df5253a-41d3-45de-88f3-370d7565d20a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.moment() - format or parse dates using a moment method",
              "fullTitle": "Utilities Cypress.moment() - format or parse dates using a moment method",
              "timedOut": null,
              "duration": 163,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/moment\nvar time = Cypress.moment('2014-04-25T19:38:53.196Z').utc().format('h:mm A');\nexpect(time).to.be.a('string');\ncy.get('.utility-moment').contains('3:38 PM')\n    .should('have.class', 'badge');\n// the time in the element should be between 3pm and 5pm\nvar start = Cypress.moment('3:00 PM', 'LT');\nvar end = Cypress.moment('5:00 PM', 'LT');\ncy.get('.utility-moment .badge')\n    .should(function ($el) {\n    // parse American time like \"3:38 PM\"\n    var m = Cypress.moment($el.text().trim(), 'LT');\n    // display hours + minutes + AM|PM\n    var f = 'h:mm A';\n    expect(m.isBetween(start, end), m.format(f) + \" should be between \" + start.format(f) + \" and \" + end.format(f)).to.be[\"true\"];\n});",
              "err": {},
              "uuid": "3f4f61a7-ae4d-447f-a43e-487b5291b364",
              "parentUUID": "4df5253a-41d3-45de-88f3-370d7565d20a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.Promise - instantiate a bluebird promise",
              "fullTitle": "Utilities Cypress.Promise - instantiate a bluebird promise",
              "timedOut": null,
              "duration": 1147,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/promise\nvar waited = false;\n/**\n * @return Bluebird<string>\n */\nfunction waitOneSecond() {\n    // return a promise that resolves after 1 second\n    // @ts-ignore TS2351 (new Cypress.Promise)\n    return new Cypress.Promise(function (resolve, reject) {\n        setTimeout(function () {\n            // set waited to true\n            waited = true;\n            // resolve with 'foo' string\n            resolve('foo');\n        }, 1000);\n    });\n}\ncy.then(function () {\n    // return a promise to cy.then() that\n    // is awaited until it resolves\n    // @ts-ignore TS7006\n    return waitOneSecond().then(function (str) {\n        expect(str).to.eq('foo');\n        expect(waited).to.be[\"true\"];\n    });\n});",
              "err": {},
              "uuid": "138391fb-d362-41d6-ac26-3674c61edb79",
              "parentUUID": "4df5253a-41d3-45de-88f3-370d7565d20a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5ff74bcd-f5b5-4498-8ab2-1b53ee09d0e2",
            "c6474bad-006f-44fa-bf78-b7e9b05fa251",
            "bcf3ec23-dacf-4e5d-897b-2dab1accb11e",
            "6970a58f-57c0-4237-bf63-0c2945955454",
            "3f4f61a7-ae4d-447f-a43e-487b5291b364",
            "138391fb-d362-41d6-ac26-3674c61edb79"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3394,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "b8275501-b4a0-4900-a753-e49af6ec6813",
      "title": "",
      "fullFile": "cypress/integration/examples/viewport.spec.js",
      "file": "cypress/integration/examples/viewport.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "821c3a45-4de4-44a5-950c-585e079dd670",
          "title": "Viewport",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.viewport() - set the viewport size and dimension",
              "fullTitle": "Viewport cy.viewport() - set the viewport size and dimension",
              "timedOut": null,
              "duration": 3230,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/viewport\ncy.get('#navbar').should('be.visible');\ncy.viewport(320, 480);\n// the navbar should have collapse since our screen is smaller\ncy.get('#navbar').should('not.be.visible');\ncy.get('.navbar-toggle').should('be.visible').click();\ncy.get('.nav').find('a').should('be.visible');\n// lets see what our app looks like on a super large screen\ncy.viewport(2999, 2999);\n// cy.viewport() accepts a set of preset sizes\n// to easily set the screen to a device's width and height\n// We added a cy.wait() between each viewport change so you can see\n// the change otherwise it is a little too fast to see :)\ncy.viewport('macbook-15');\ncy.wait(200);\ncy.viewport('macbook-13');\ncy.wait(200);\ncy.viewport('macbook-11');\ncy.wait(200);\ncy.viewport('ipad-2');\ncy.wait(200);\ncy.viewport('ipad-mini');\ncy.wait(200);\ncy.viewport('iphone-6+');\ncy.wait(200);\ncy.viewport('iphone-6');\ncy.wait(200);\ncy.viewport('iphone-5');\ncy.wait(200);\ncy.viewport('iphone-4');\ncy.wait(200);\ncy.viewport('iphone-3');\ncy.wait(200);\n// cy.viewport() accepts an orientation for all presets\n// the default orientation is 'portrait'\ncy.viewport('ipad-2', 'portrait');\ncy.wait(200);\ncy.viewport('iphone-4', 'landscape');\ncy.wait(200);\n// The viewport will be reset back to the default dimensions\n// in between tests (the  default can be set in cypress.json)",
              "err": {},
              "uuid": "c2717e71-0511-43f5-955e-f0dcf38d1d27",
              "parentUUID": "821c3a45-4de4-44a5-950c-585e079dd670",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c2717e71-0511-43f5-955e-f0dcf38d1d27"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3230,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a1c67c83-6e10-4fd0-b5a5-bad37ea51bb2",
      "title": "",
      "fullFile": "cypress/integration/examples/waiting.spec.js",
      "file": "cypress/integration/examples/waiting.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6a4a585a-1b39-4f52-9392-5a0133353232",
          "title": "Waiting",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.wait() - wait for a specific amount of time",
              "fullTitle": "Waiting cy.wait() - wait for a specific amount of time",
              "timedOut": null,
              "duration": 5250,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.wait-input1').type('Wait 1000ms after typing');\ncy.wait(1000);\ncy.get('.wait-input2').type('Wait 1000ms after typing');\ncy.wait(1000);\ncy.get('.wait-input3').type('Wait 1000ms after typing');\ncy.wait(1000);",
              "err": {},
              "uuid": "226aa485-f3f9-4b4d-a07e-ca5f49e62a49",
              "parentUUID": "6a4a585a-1b39-4f52-9392-5a0133353232",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.wait() - wait for a specific route",
              "fullTitle": "Waiting cy.wait() - wait for a specific route",
              "timedOut": null,
              "duration": 929,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.server();\n// Listen to GET to comments/1\ncy.route('GET', 'comments/*').as('getComment');\n// we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get('.network-btn').click();\n// wait for GET comments/1\ncy.wait('@getComment').its('status').should('eq', 200);",
              "err": {},
              "uuid": "5a363ba0-41e2-4976-9b47-b9f6ce31fbe3",
              "parentUUID": "6a4a585a-1b39-4f52-9392-5a0133353232",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "226aa485-f3f9-4b4d-a07e-ca5f49e62a49",
            "5a363ba0-41e2-4976-9b47-b9f6ce31fbe3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6179,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "9393e547-88f7-41ae-b5e0-f32f3db27957",
      "title": "",
      "fullFile": "cypress/integration/examples/window.spec.js",
      "file": "cypress/integration/examples/window.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b1d03c62-1b8e-460c-a46a-8b0cdce3cb4b",
          "title": "Window",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.window() - get the global window object",
              "fullTitle": "Window cy.window() - get the global window object",
              "timedOut": null,
              "duration": 517,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/window\ncy.window().should('have.property', 'top');",
              "err": {},
              "uuid": "339f3555-2597-4fec-8297-dc595281b3c0",
              "parentUUID": "b1d03c62-1b8e-460c-a46a-8b0cdce3cb4b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.document() - get the document object",
              "fullTitle": "Window cy.document() - get the document object",
              "timedOut": null,
              "duration": 146,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/document\ncy.document().should('have.property', 'charset').and('eq', 'UTF-8');",
              "err": {},
              "uuid": "49c30389-fb9d-4281-acee-06d27a868230",
              "parentUUID": "b1d03c62-1b8e-460c-a46a-8b0cdce3cb4b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.title() - get the title",
              "fullTitle": "Window cy.title() - get the title",
              "timedOut": null,
              "duration": 155,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/title\ncy.title().should('include', 'Kitchen Sink');",
              "err": {},
              "uuid": "66894be4-55d5-46b8-91cb-71ea092a027f",
              "parentUUID": "b1d03c62-1b8e-460c-a46a-8b0cdce3cb4b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "339f3555-2597-4fec-8297-dc595281b3c0",
            "49c30389-fb9d-4281-acee-06d27a868230",
            "66894be4-55d5-46b8-91cb-71ea092a027f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 818,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "96b9332f-29a1-4400-9ca1-879d0ab83ba6",
      "title": "",
      "fullFile": "cypress/integration/train/test.spec.js",
      "file": "cypress/integration/train/test.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7910d23e-52af-406e-b0b2-68851f749b3f",
          "title": "Example suite",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "first test",
              "fullTitle": "Example suite first test",
              "timedOut": null,
              "duration": 2852,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-cy=\"signInButton\"]');\ncy.contains('Sign in');\ncy.contains('[status=\"warning\"]', 'Sign in');",
              "err": {},
              "uuid": "76879892-2659-4e03-9f51-71eadec17344",
              "parentUUID": "7910d23e-52af-406e-b0b2-68851f749b3f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "second test",
              "fullTitle": "Example suite second test",
              "timedOut": null,
              "duration": 1558,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#inputEmail3')\n    .parents('form')\n    .find('button')\n    .should('contain', 'Sign in')\n    .parents('form')\n    .find('nb-checkbox')\n    .click();",
              "err": {},
              "uuid": "95d7bc76-a6f5-420f-9f01-f124a96578e0",
              "parentUUID": "7910d23e-52af-406e-b0b2-68851f749b3f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "third test",
              "fullTitle": "Example suite third test",
              "timedOut": null,
              "duration": 1606,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('nb-card', 'Horizontal form')\n    .find('#inputEmail3')\n    .type('some email');",
              "err": {},
              "uuid": "71305900-4aa9-47b9-a16d-8cda8bbf99a5",
              "parentUUID": "7910d23e-52af-406e-b0b2-68851f749b3f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "76879892-2659-4e03-9f51-71eadec17344",
            "95d7bc76-a6f5-420f-9f01-f124a96578e0",
            "71305900-4aa9-47b9-a16d-8cda8bbf99a5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6016,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "bf6b8a0b-7120-4189-91b9-aa8f84315240",
      "title": "",
      "fullFile": "cypress/integration/examples/actions.spec.js",
      "file": "cypress/integration/examples/actions.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6805b3b6-4775-4533-8ea9-1d5d43650813",
          "title": "Actions",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".type() - type into a DOM element",
              "fullTitle": "Actions .type() - type into a DOM element",
              "timedOut": null,
              "duration": 4637,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/type\ncy.get('.action-email')\n    .type('fake@email.com').should('have.value', 'fake@email.com')\n    // .type() with special character sequences\n    .type('{leftarrow}{rightarrow}{uparrow}{downarrow}')\n    .type('{del}{selectall}{backspace}')\n    // .type() with key modifiers\n    .type('{alt}{option}') //these are equivalent\n    .type('{ctrl}{control}') //these are equivalent\n    .type('{meta}{command}{cmd}') //these are equivalent\n    .type('{shift}')\n    // Delay each keypress by 0.1 sec\n    .type('slow.typing@email.com', { delay: 100 })\n    .should('have.value', 'slow.typing@email.com');\ncy.get('.action-disabled')\n    // Ignore error checking prior to type\n    // like whether the input is visible or disabled\n    .type('disabled error checking', { force: true })\n    .should('have.value', 'disabled error checking');",
              "err": {},
              "uuid": "a297fbed-1d04-4aaa-8f7d-d480c4b84d7b",
              "parentUUID": "6805b3b6-4775-4533-8ea9-1d5d43650813",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".focus() - focus on a DOM element",
              "fullTitle": "Actions .focus() - focus on a DOM element",
              "timedOut": null,
              "duration": 269,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/focus\ncy.get('.action-focus').focus()\n    .should('have.class', 'focus')\n    .prev().should('have.attr', 'style', 'color: orange;');",
              "err": {},
              "uuid": "2da5680d-ffe8-4e4a-aa75-a2225a4469e5",
              "parentUUID": "6805b3b6-4775-4533-8ea9-1d5d43650813",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".blur() - blur off a DOM element",
              "fullTitle": "Actions .blur() - blur off a DOM element",
              "timedOut": null,
              "duration": 510,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/blur\ncy.get('.action-blur').type('About to blur').blur()\n    .should('have.class', 'error')\n    .prev().should('have.attr', 'style', 'color: red;');",
              "err": {},
              "uuid": "05771112-6fce-4ee6-bd4a-99d46fbcecc8",
              "parentUUID": "6805b3b6-4775-4533-8ea9-1d5d43650813",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".clear() - clears an input or textarea element",
              "fullTitle": "Actions .clear() - clears an input or textarea element",
              "timedOut": null,
              "duration": 633,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clear\ncy.get('.action-clear').type('Clear this text')\n    .should('have.value', 'Clear this text')\n    .clear()\n    .should('have.value', '');",
              "err": {},
              "uuid": "fb1c014a-9d32-48aa-8223-73cd412e91e8",
              "parentUUID": "6805b3b6-4775-4533-8ea9-1d5d43650813",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".submit() - submit a form",
              "fullTitle": "Actions .submit() - submit a form",
              "timedOut": null,
              "duration": 501,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/submit\ncy.get('.action-form')\n    .find('[type=\"text\"]').type('HALFOFF');\ncy.get('.action-form').submit()\n    .next().should('contain', 'Your form has been submitted!');",
              "err": {},
              "uuid": "011c28d1-a6f2-4950-a462-a4a66f4b5809",
              "parentUUID": "6805b3b6-4775-4533-8ea9-1d5d43650813",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".click() - click on a DOM element",
              "fullTitle": "Actions .click() - click on a DOM element",
              "timedOut": null,
              "duration": 2315,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/click\ncy.get('.action-btn').click();\n// You can click on 9 specific positions of an element:\n//  -----------------------------------\n// | topLeft        top       topRight |\n// |                                   |\n// |                                   |\n// |                                   |\n// | left          center        right |\n// |                                   |\n// |                                   |\n// |                                   |\n// | bottomLeft   bottom   bottomRight |\n//  -----------------------------------\n// clicking in the center of the element is the default\ncy.get('#action-canvas').click();\ncy.get('#action-canvas').click('topLeft');\ncy.get('#action-canvas').click('top');\ncy.get('#action-canvas').click('topRight');\ncy.get('#action-canvas').click('left');\ncy.get('#action-canvas').click('right');\ncy.get('#action-canvas').click('bottomLeft');\ncy.get('#action-canvas').click('bottom');\ncy.get('#action-canvas').click('bottomRight');\n// .click() accepts an x and y coordinate\n// that controls where the click occurs :)\ncy.get('#action-canvas')\n    .click(80, 75) // click 80px on x coord and 75px on y coord\n    .click(170, 75)\n    .click(80, 165)\n    .click(100, 185)\n    .click(125, 190)\n    .click(150, 185)\n    .click(170, 165);\n// click multiple elements by passing multiple: true\ncy.get('.action-labels>.label').click({ multiple: true });\n// Ignore error checking prior to clicking\ncy.get('.action-opacity>.btn').click({ force: true });",
              "err": {},
              "uuid": "b73dd6d6-d54b-4201-99b1-40bceaa890fe",
              "parentUUID": "6805b3b6-4775-4533-8ea9-1d5d43650813",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".dblclick() - double click on a DOM element",
              "fullTitle": "Actions .dblclick() - double click on a DOM element",
              "timedOut": null,
              "duration": 464,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/dblclick\n// Our app has a listener on 'dblclick' event in our 'scripts.js'\n// that hides the div and shows an input on double click\ncy.get('.action-div').dblclick().should('not.be.visible');\ncy.get('.action-input-hidden').should('be.visible');",
              "err": {},
              "uuid": "de2ebc2e-10b4-492d-8962-3f330afa8d63",
              "parentUUID": "6805b3b6-4775-4533-8ea9-1d5d43650813",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".rightclick() - right click on a DOM element",
              "fullTitle": "Actions .rightclick() - right click on a DOM element",
              "timedOut": null,
              "duration": 298,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/rightclick\n// Our app has a listener on 'contextmenu' event in our 'scripts.js'\n// that hides the div and shows an input on right click\ncy.get('.rightclick-action-div').rightclick().should('not.be.visible');\ncy.get('.rightclick-action-input-hidden').should('be.visible');",
              "err": {},
              "uuid": "0ca486c8-c74f-4769-b88b-fb53c64a68ae",
              "parentUUID": "6805b3b6-4775-4533-8ea9-1d5d43650813",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".check() - check a checkbox or radio element",
              "fullTitle": "Actions .check() - check a checkbox or radio element",
              "timedOut": null,
              "duration": 1068,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/check\n// By default, .check() will check all\n// matching checkbox or radio elements in succession, one after another\ncy.get('.action-checkboxes [type=\"checkbox\"]').not('[disabled]')\n    .check().should('be.checked');\ncy.get('.action-radios [type=\"radio\"]').not('[disabled]')\n    .check().should('be.checked');\n// .check() accepts a value argument\ncy.get('.action-radios [type=\"radio\"]')\n    .check('radio1').should('be.checked');\n// .check() accepts an array of values\ncy.get('.action-multiple-checkboxes [type=\"checkbox\"]')\n    .check(['checkbox1', 'checkbox2']).should('be.checked');\n// Ignore error checking prior to checking\ncy.get('.action-checkboxes [disabled]')\n    .check({ force: true }).should('be.checked');\ncy.get('.action-radios [type=\"radio\"]')\n    .check('radio3', { force: true }).should('be.checked');",
              "err": {},
              "uuid": "966e6387-c63f-45eb-9b95-cb5a9b89895f",
              "parentUUID": "6805b3b6-4775-4533-8ea9-1d5d43650813",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".uncheck() - uncheck a checkbox element",
              "fullTitle": "Actions .uncheck() - uncheck a checkbox element",
              "timedOut": null,
              "duration": 1026,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/uncheck\n// By default, .uncheck() will uncheck all matching\n// checkbox elements in succession, one after another\ncy.get('.action-check [type=\"checkbox\"]')\n    .not('[disabled]')\n    .uncheck().should('not.be.checked');\n// .uncheck() accepts a value argument\ncy.get('.action-check [type=\"checkbox\"]')\n    .check('checkbox1')\n    .uncheck('checkbox1').should('not.be.checked');\n// .uncheck() accepts an array of values\ncy.get('.action-check [type=\"checkbox\"]')\n    .check(['checkbox1', 'checkbox3'])\n    .uncheck(['checkbox1', 'checkbox3']).should('not.be.checked');\n// Ignore error checking prior to unchecking\ncy.get('.action-check [disabled]')\n    .uncheck({ force: true }).should('not.be.checked');",
              "err": {},
              "uuid": "16fd1f39-300a-4bfb-a21e-344ad88fdfa6",
              "parentUUID": "6805b3b6-4775-4533-8ea9-1d5d43650813",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".select() - select an option in a <select> element",
              "fullTitle": "Actions .select() - select an option in a <select> element",
              "timedOut": null,
              "duration": 1045,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/select\n// at first, no option should be selected\ncy.get('.action-select')\n    .should('have.value', '--Select a fruit--');\n// Select option(s) with matching text content\ncy.get('.action-select').select('apples');\n// confirm the apples were selected\n// note that each value starts with \"fr-\" in our HTML\ncy.get('.action-select').should('have.value', 'fr-apples');\ncy.get('.action-select-multiple')\n    .select(['apples', 'oranges', 'bananas'])\n    // when getting multiple values, invoke \"val\" method first\n    .invoke('val')\n    .should('deep.equal', ['fr-apples', 'fr-oranges', 'fr-bananas']);\n// Select option(s) with matching value\ncy.get('.action-select').select('fr-bananas')\n    // can attach an assertion right away to the element\n    .should('have.value', 'fr-bananas');\ncy.get('.action-select-multiple')\n    .select(['fr-apples', 'fr-oranges', 'fr-bananas'])\n    .invoke('val')\n    .should('deep.equal', ['fr-apples', 'fr-oranges', 'fr-bananas']);\n// assert the selected values include oranges\ncy.get('.action-select-multiple')\n    .invoke('val').should('include', 'fr-oranges');",
              "err": {},
              "uuid": "160de9d7-004c-4545-be13-d8e2abb5dcda",
              "parentUUID": "6805b3b6-4775-4533-8ea9-1d5d43650813",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".scrollIntoView() - scroll an element into view",
              "fullTitle": "Actions .scrollIntoView() - scroll an element into view",
              "timedOut": null,
              "duration": 266,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/scrollintoview\n// normally all of these buttons are hidden,\n// because they're not within\n// the viewable area of their parent\n// (we need to scroll to see them)\ncy.get('#scroll-horizontal button')\n    .should('not.be.visible');\n// scroll the button into view, as if the user had scrolled\ncy.get('#scroll-horizontal button').scrollIntoView()\n    .should('be.visible');\ncy.get('#scroll-vertical button')\n    .should('not.be.visible');\n// Cypress handles the scroll direction needed\ncy.get('#scroll-vertical button').scrollIntoView()\n    .should('be.visible');\ncy.get('#scroll-both button')\n    .should('not.be.visible');\n// Cypress knows to scroll to the right and down\ncy.get('#scroll-both button').scrollIntoView()\n    .should('be.visible');",
              "err": {},
              "uuid": "c0a783ba-5d75-4ce6-b31f-fe9666dea7b5",
              "parentUUID": "6805b3b6-4775-4533-8ea9-1d5d43650813",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".trigger() - trigger an event on a DOM element",
              "fullTitle": "Actions .trigger() - trigger an event on a DOM element",
              "timedOut": null,
              "duration": 227,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/trigger\n// To interact with a range input (slider)\n// we need to set its value & trigger the\n// event to signal it changed\n// Here, we invoke jQuery's val() method to set\n// the value and trigger the 'change' event\ncy.get('.trigger-input-range')\n    .invoke('val', 25)\n    .trigger('change')\n    .get('input[type=range]').siblings('p')\n    .should('have.text', '25');",
              "err": {},
              "uuid": "685998e7-76c1-467c-8f64-c65a27d18806",
              "parentUUID": "6805b3b6-4775-4533-8ea9-1d5d43650813",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.scrollTo() - scroll the window or element to a position",
              "fullTitle": "Actions cy.scrollTo() - scroll the window or element to a position",
              "timedOut": null,
              "duration": 2240,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/scrollTo\n// You can scroll to 9 specific positions of an element:\n//  -----------------------------------\n// | topLeft        top       topRight |\n// |                                   |\n// |                                   |\n// |                                   |\n// | left          center        right |\n// |                                   |\n// |                                   |\n// |                                   |\n// | bottomLeft   bottom   bottomRight |\n//  -----------------------------------\n// if you chain .scrollTo() off of cy, we will\n// scroll the entire window\ncy.scrollTo('bottom');\ncy.get('#scrollable-horizontal').scrollTo('right');\n// or you can scroll to a specific coordinate:\n// (x axis, y axis) in pixels\ncy.get('#scrollable-vertical').scrollTo(250, 250);\n// or you can scroll to a specific percentage\n// of the (width, height) of the element\ncy.get('#scrollable-both').scrollTo('75%', '25%');\n// control the easing of the scroll (default is 'swing')\ncy.get('#scrollable-vertical').scrollTo('center', { easing: 'linear' });\n// control the duration of the scroll (in ms)\ncy.get('#scrollable-both').scrollTo('center', { duration: 2000 });",
              "err": {},
              "uuid": "c1a4c1d8-ca6d-4ea3-b497-2b3668e49dcd",
              "parentUUID": "6805b3b6-4775-4533-8ea9-1d5d43650813",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a297fbed-1d04-4aaa-8f7d-d480c4b84d7b",
            "2da5680d-ffe8-4e4a-aa75-a2225a4469e5",
            "05771112-6fce-4ee6-bd4a-99d46fbcecc8",
            "fb1c014a-9d32-48aa-8223-73cd412e91e8",
            "011c28d1-a6f2-4950-a462-a4a66f4b5809",
            "b73dd6d6-d54b-4201-99b1-40bceaa890fe",
            "de2ebc2e-10b4-492d-8962-3f330afa8d63",
            "0ca486c8-c74f-4769-b88b-fb53c64a68ae",
            "966e6387-c63f-45eb-9b95-cb5a9b89895f",
            "16fd1f39-300a-4bfb-a21e-344ad88fdfa6",
            "160de9d7-004c-4545-be13-d8e2abb5dcda",
            "c0a783ba-5d75-4ce6-b31f-fe9666dea7b5",
            "685998e7-76c1-467c-8f64-c65a27d18806",
            "c1a4c1d8-ca6d-4ea3-b497-2b3668e49dcd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 15499,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.1"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/mochawesome",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.1.0"
    }
  }
}